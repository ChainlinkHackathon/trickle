{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "updateInterval",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "checkData",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "interval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dca_interval",
          "type": "uint256"
        }
      ],
      "name": "setDca",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "user_to_amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "user_to_interval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Trickle.sol"
  },
  "ast": {
    "absolutePath": "contracts/Trickle.sol",
    "exportedSymbols": {
      "KeeperCompatibleInterface": [
        16
      ],
      "Trickle": [
        135
      ]
    },
    "id": 136,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "KeeperCompatibleInterface",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 16,
        "linearizedBaseContracts": [
          16
        ],
        "name": "KeeperCompatibleInterface",
        "nameLocation": "67:25:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "6e04ff0d",
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "108:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nameLocation": "135:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "120:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "120:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "119:26:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "185:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "180:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "212:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "199:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "179:45:0"
            },
            "scope": 16,
            "src": "99:126:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "4585e33b",
            "id": 15,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "240:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "269:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "254:26:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "253:28:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:0:0"
            },
            "scope": 16,
            "src": "231:60:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 136,
        "src": "57:236:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17,
              "name": "KeeperCompatibleInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16,
              "src": "315:25:0"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "315:25:0"
          }
        ],
        "canonicalName": "Trickle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 135,
        "linearizedBaseContracts": [
          135,
          16
        ],
        "name": "Trickle",
        "nameLocation": "304:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "61bc221a",
            "id": 20,
            "mutability": "mutable",
            "name": "counter",
            "nameLocation": "362:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "347:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "347:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "947a36fb",
            "id": 22,
            "mutability": "immutable",
            "name": "interval",
            "nameLocation": "506:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "481:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "481:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3f3b3b27",
            "id": 24,
            "mutability": "mutable",
            "name": "lastTimeStamp",
            "nameLocation": "535:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "520:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "520:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3f774675",
            "id": 28,
            "mutability": "mutable",
            "name": "user_to_interval",
            "nameLocation": "589:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "554:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "562:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "554:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 26,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "573:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7bdb76b6",
            "id": 32,
            "mutability": "mutable",
            "name": "user_to_amount",
            "nameLocation": "646:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "611:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 31,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "619:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "611:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 30,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "630:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5e5f2e26",
            "id": 35,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "683:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "666:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "666:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 34,
              "nodeType": "ArrayTypeName",
              "src": "666:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "29161a00",
            "id": 41,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nameLocation": "757:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "702:69:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 40,
              "keyType": {
                "id": 36,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "710:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "702:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 39,
                "keyType": {
                  "id": 37,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "729:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "721:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 38,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "740:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "814:104:0",
              "statements": [
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "824:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47,
                      "name": "updateInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "835:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "824:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "824:25:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "859:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "875:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "875:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "859:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "859:31:0"
                },
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "900:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "910:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "900:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "900:11:0"
                }
              ]
            },
            "id": 60,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "updateInterval",
                  "nameLocation": "798:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "790:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "789:24:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:0"
            },
            "scope": 135,
            "src": "778:140:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1076:159:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 68,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1094:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1104:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1094:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742063616e6e6f742062652030",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1107:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        },
                        "value": "amount cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1086:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1086:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:42:0"
                },
                {
                  "expression": {
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74,
                        "name": "user_to_interval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1138:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 77,
                      "indexExpression": {
                        "expression": {
                          "id": 75,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1155:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1155:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1138:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78,
                      "name": "_dca_interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "1169:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1138:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1138:44:0"
                },
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 81,
                        "name": "user_to_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1192:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 84,
                      "indexExpression": {
                        "expression": {
                          "id": 82,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1207:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1207:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1192:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 85,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "1221:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1192:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1192:36:0"
                }
              ]
            },
            "functionSelector": "209c6e5b",
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDca",
            "nameLocation": "1000:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1024:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1016:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "_dca_interval",
                  "nameLocation": "1049:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1041:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1006:62:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1076:0:0"
            },
            "scope": 135,
            "src": "991:244:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10
            ],
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1401:109:0",
              "statements": [
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "upkeepNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1411:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 100,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1427:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1427:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 102,
                              "name": "lastTimeStamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "1445:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1427:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 104,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1426:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 105,
                        "name": "interval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1462:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1426:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1411:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:59:0"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "performData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "1480:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 110,
                      "name": "checkData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "1494:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "1480:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:23:0"
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "1250:11:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 93,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1326:8:0"
            },
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nameLocation": "1277:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1262:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1261:26:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "1357:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1352:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1352:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "1384:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1371:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1351:45:0"
            },
            "scope": 135,
            "src": "1241:269:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15
            ],
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1585:166:0",
              "statements": [
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 120,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1595:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 121,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1611:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1611:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1595:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1595:31:0"
                },
                {
                  "expression": {
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 125,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1636:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 126,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1646:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1656:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1646:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1636:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:21:0"
                },
                {
                  "expression": {
                    "id": 131,
                    "name": "performData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 116,
                    "src": "1667:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:11:0"
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "1525:13:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 118,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1576:8:0"
            },
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "1554:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1539:26:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1538:28:0"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1585:0:0"
            },
            "scope": 135,
            "src": "1516:235:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 136,
        "src": "295:1458:0",
        "usedErrors": []
      }
    ],
    "src": "32:1724:0"
  },
  "bytecode": "60a060405234801561001057600080fd5b5060405161056138038061056183398101604081905261002f9161003f565b6080524260015560008055610058565b60006020828403121561005157600080fd5b5051919050565b6080516104e761007a600039600081816101ac015261027e01526104e76000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80635e5f2e26116100665780635e5f2e261461013257806361bc221a1461015d5780636e04ff0d146101665780637bdb76b614610187578063947a36fb146101a757600080fd5b8063209c6e5b146100a357806329161a00146100b85780633f3b3b27146100f65780633f774675146100ff5780634585e33b1461011f575b600080fd5b6100b66100b13660046102ef565b6101ce565b005b6100e36100c636600461032d565b600560209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6100e360015481565b6100e361010d366004610360565b60026020526000908152604090205481565b6100b661012d366004610382565b610235565b6101456101403660046103f4565b61024e565b6040516001600160a01b0390911681526020016100ed565b6100e360005481565b610179610174366004610382565b610278565b6040516100ed92919061040d565b6100e3610195366004610360565b60036020526000908152604090205481565b6100e37f000000000000000000000000000000000000000000000000000000000000000081565b600082116102175760405162461bcd60e51b81526020600482015260126024820152710616d6f756e742063616e6e6f7420626520360741b604482015260640160405180910390fd5b33600090815260026020908152604080832093909355600390522055565b42600190815560005461024791610482565b6000555050565b6004818154811061025e57600080fd5b6000918252602090912001546001600160a01b0316905081565b600060607f0000000000000000000000000000000000000000000000000000000000000000600154426102ab919061049a565b11915083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250949792965091945050505050565b6000806040838503121561030257600080fd5b50508035926020909101359150565b80356001600160a01b038116811461032857600080fd5b919050565b6000806040838503121561034057600080fd5b61034983610311565b915061035760208401610311565b90509250929050565b60006020828403121561037257600080fd5b61037b82610311565b9392505050565b6000806020838503121561039557600080fd5b823567ffffffffffffffff808211156103ad57600080fd5b818501915085601f8301126103c157600080fd5b8135818111156103d057600080fd5b8660208285010111156103e257600080fd5b60209290920196919550909350505050565b60006020828403121561040657600080fd5b5035919050565b821515815260006020604081840152835180604085015260005b8181101561044357858101830151858201606001528201610427565b81811115610455576000606083870101525b50601f01601f191692909201606001949350505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156104955761049561046c565b500190565b6000828210156104ac576104ac61046c565b50039056fea2646970667358221220e460eecc88ee66fe916737869f75fd3dc8c0c63f7ae3f26dcfe6ce50bacfef4c64736f6c63430008090033",
  "bytecodeSha1": "2b9a7899ca45c61c98ec2e832acb05174efef0d2",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "Trickle",
  "coverageMap": {
    "branches": {
      "0": {
        "Trickle.setDca": {
          "7": [
            1094,
            1105,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Trickle.checkUpkeep": {
          "5": [
            1411,
            1470
          ],
          "6": [
            1480,
            1503
          ]
        },
        "Trickle.performUpkeep": {
          "3": [
            1595,
            1626
          ],
          "4": [
            1636,
            1657
          ]
        },
        "Trickle.setDca": {
          "0": [
            1086,
            1128
          ],
          "1": [
            1138,
            1182
          ],
          "2": [
            1192,
            1228
          ]
        }
      }
    }
  },
  "dependencies": [
    "KeeperCompatibleInterface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80635e5f2e26116100665780635e5f2e261461013257806361bc221a1461015d5780636e04ff0d146101665780637bdb76b614610187578063947a36fb146101a757600080fd5b8063209c6e5b146100a357806329161a00146100b85780633f3b3b27146100f65780633f774675146100ff5780634585e33b1461011f575b600080fd5b6100b66100b13660046102ef565b6101ce565b005b6100e36100c636600461032d565b600560209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6100e360015481565b6100e361010d366004610360565b60026020526000908152604090205481565b6100b661012d366004610382565b610235565b6101456101403660046103f4565b61024e565b6040516001600160a01b0390911681526020016100ed565b6100e360005481565b610179610174366004610382565b610278565b6040516100ed92919061040d565b6100e3610195366004610360565b60036020526000908152604090205481565b6100e37f000000000000000000000000000000000000000000000000000000000000000081565b600082116102175760405162461bcd60e51b81526020600482015260126024820152710616d6f756e742063616e6e6f7420626520360741b604482015260640160405180910390fd5b33600090815260026020908152604080832093909355600390522055565b42600190815560005461024791610482565b6000555050565b6004818154811061025e57600080fd5b6000918252602090912001546001600160a01b0316905081565b600060607f0000000000000000000000000000000000000000000000000000000000000000600154426102ab919061049a565b11915083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250949792965091945050505050565b6000806040838503121561030257600080fd5b50508035926020909101359150565b80356001600160a01b038116811461032857600080fd5b919050565b6000806040838503121561034057600080fd5b61034983610311565b915061035760208401610311565b90509250929050565b60006020828403121561037257600080fd5b61037b82610311565b9392505050565b6000806020838503121561039557600080fd5b823567ffffffffffffffff808211156103ad57600080fd5b818501915085601f8301126103c157600080fd5b8135818111156103d057600080fd5b8660208285010111156103e257600080fd5b60209290920196919550909350505050565b60006020828403121561040657600080fd5b5035919050565b821515815260006020604081840152835180604085015260005b8181101561044357858101830151858201606001528201610427565b81811115610455576000606083870101525b50601f01601f191692909201606001949350505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156104955761049561046c565b500190565b6000828210156104ac576104ac61046c565b50039056fea2646970667358221220e460eecc88ee66fe916737869f75fd3dc8c0c63f7ae3f26dcfe6ce50bacfef4c64736f6c63430008090033",
  "deployedSourceMap": "295:1458:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;991:244;;;;;;:::i;:::-;;:::i;:::-;;702:69;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:25:1;;;844:2;829:18;702:69:0;;;;;;;;520:28;;;;;;554:51;;;;;;:::i;:::-;;;;;;;;;;;;;;1516:235;;;;;;:::i;:::-;;:::i;666:30::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2028:32:1;;;2010:51;;1998:2;1983:18;666:30:0;1864:203:1;347:22:0;;;;;;1241:269;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;611:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;481:33;;;;;991:244;1104:1;1094:7;:11;1086:42;;;;-1:-1:-1;;;1086:42:0;;2955:2:1;1086:42:0;;;2937:21:1;2994:2;2974:18;;;2967:30;-1:-1:-1;;;3013:18:1;;;3006:48;3071:18;;1086:42:0;;;;;;;;1155:10;1138:28;;;;:16;:28;;;;;;;;:44;;;;1192:14;:26;;;:36;991:244::o;1516:235::-;1611:15;1595:13;:31;;;1646:7;;:11;;;:::i;:::-;1636:7;:21;-1:-1:-1;;1516:235:0:o;666:30::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;666:30:0;;-1:-1:-1;666:30:0;:::o;1241:269::-;1352:17;1371:24;1462:8;1445:13;;1427:15;:31;;;;:::i;:::-;1426:44;1411:59;;1494:9;;1480:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1241:269:0;;1480:23;;-1:-1:-1;1241:269:0;;-1:-1:-1;;;;;1241:269:0:o;14:248:1:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:1;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:1:o;267:173::-;335:20;;-1:-1:-1;;;;;384:31:1;;374:42;;364:70;;430:1;427;420:12;364:70;267:173;;;:::o;445:260::-;513:6;521;574:2;562:9;553:7;549:23;545:32;542:52;;;590:1;587;580:12;542:52;613:29;632:9;613:29;:::i;:::-;603:39;;661:38;695:2;684:9;680:18;661:38;:::i;:::-;651:48;;445:260;;;;;:::o;892:186::-;951:6;1004:2;992:9;983:7;979:23;975:32;972:52;;;1020:1;1017;1010:12;972:52;1043:29;1062:9;1043:29;:::i;:::-;1033:39;892:186;-1:-1:-1;;;892:186:1:o;1083:591::-;1153:6;1161;1214:2;1202:9;1193:7;1189:23;1185:32;1182:52;;;1230:1;1227;1220:12;1182:52;1270:9;1257:23;1299:18;1340:2;1332:6;1329:14;1326:34;;;1356:1;1353;1346:12;1326:34;1394:6;1383:9;1379:22;1369:32;;1439:7;1432:4;1428:2;1424:13;1420:27;1410:55;;1461:1;1458;1451:12;1410:55;1501:2;1488:16;1527:2;1519:6;1516:14;1513:34;;;1543:1;1540;1533:12;1513:34;1588:7;1583:2;1574:6;1570:2;1566:15;1562:24;1559:37;1556:57;;;1609:1;1606;1599:12;1556:57;1640:2;1632:11;;;;;1662:6;;-1:-1:-1;1083:591:1;;-1:-1:-1;;;;1083:591:1:o;1679:180::-;1738:6;1791:2;1779:9;1770:7;1766:23;1762:32;1759:52;;;1807:1;1804;1797:12;1759:52;-1:-1:-1;1830:23:1;;1679:180;-1:-1:-1;1679:180:1:o;2072:676::-;2255:6;2248:14;2241:22;2230:9;2223:41;2204:4;2283:2;2321;2316;2305:9;2301:18;2294:30;2353:6;2347:13;2396:6;2391:2;2380:9;2376:18;2369:34;2421:1;2431:140;2445:6;2442:1;2439:13;2431:140;;;2540:14;;;2536:23;;2530:30;2506:17;;;2525:2;2502:26;2495:66;2460:10;;2431:140;;;2589:6;2586:1;2583:13;2580:91;;;2659:1;2654:2;2645:6;2634:9;2630:22;2626:31;2619:42;2580:91;-1:-1:-1;2732:2:1;2711:15;-1:-1:-1;;2707:29:1;2692:45;;;;2739:2;2688:54;;2072:676;-1:-1:-1;;;;2072:676:1:o;3100:127::-;3161:10;3156:3;3152:20;3149:1;3142:31;3192:4;3189:1;3182:15;3216:4;3213:1;3206:15;3232:128;3272:3;3303:1;3299:6;3296:1;3293:13;3290:39;;;3309:18;;:::i;:::-;-1:-1:-1;3345:9:1;;3232:128::o;3365:125::-;3405:4;3433:1;3430;3427:8;3424:34;;;3438:18;;:::i;:::-;-1:-1:-1;3475:9:1;;3365:125::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    295,
    1753
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5E5F2E26 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x7BDB76B6 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x209C6E5B EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x29161A00 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x3F774675 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x11F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE3 PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x32D JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x382 JUMP JUMPDEST PUSH2 0x235 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST PUSH2 0xE3 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x382 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP3 SWAP2 SWAP1 PUSH2 0x40D JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x616D6F756E742063616E6E6F74206265203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SWAP1 MSTORE KECCAK256 SSTORE JUMP JUMPDEST TIMESTAMP PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x0 SLOAD PUSH2 0x247 SWAP2 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x0 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST GT SWAP2 POP DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP5 SWAP8 SWAP3 SWAP7 POP SWAP2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x349 DUP4 PUSH2 0x311 JUMP JUMPDEST SWAP2 POP PUSH2 0x357 PUSH1 0x20 DUP5 ADD PUSH2 0x311 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37B DUP3 PUSH2 0x311 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x443 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0x427 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 PUSH1 0x60 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x60 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x495 JUMPI PUSH2 0x495 PUSH2 0x46C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4AC JUMPI PUSH2 0x4AC PUSH2 0x46C JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PUSH1 0xEE 0xCC DUP9 0xEE PUSH7 0xFE916737869F75 REVERT RETURNDATASIZE 0xC8 0xC0 0xC6 EXTCODEHASH PUSH27 0xE3F26DCFE6CE50BACFEF4C64736F6C634300080900330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        295,
        1753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5E5F2E26"
    },
    "38": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5E5F2E26"
    },
    "49": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132"
    },
    "53": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x61BC221A"
    },
    "60": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D"
    },
    "64": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6E04FF0D"
    },
    "71": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166"
    },
    "75": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7BDB76B6"
    },
    "82": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x187"
    },
    "86": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x947A36FB"
    },
    "93": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A7"
    },
    "97": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x209C6E5B"
    },
    "109": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x29161A00"
    },
    "120": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "124": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3F3B3B27"
    },
    "131": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF6"
    },
    "135": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3F774675"
    },
    "142": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF"
    },
    "146": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4585E33B"
    },
    "153": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "157": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        295,
        1753
      ],
      "op": "REVERT",
      "path": "0"
    },
    "163": {
      "fn": "Trickle.setDca",
      "offset": [
        991,
        1235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "164": {
      "fn": "Trickle.setDca",
      "offset": [
        991,
        1235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "167": {
      "fn": "Trickle.setDca",
      "offset": [
        991,
        1235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1"
    },
    "170": {
      "fn": "Trickle.setDca",
      "offset": [
        991,
        1235
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "171": {
      "fn": "Trickle.setDca",
      "offset": [
        991,
        1235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "173": {
      "fn": "Trickle.setDca",
      "offset": [
        991,
        1235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EF"
    },
    "176": {
      "fn": "Trickle.setDca",
      "jump": "i",
      "offset": [
        991,
        1235
      ],
      "op": "JUMP",
      "path": "0"
    },
    "177": {
      "fn": "Trickle.setDca",
      "offset": [
        991,
        1235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "178": {
      "fn": "Trickle.setDca",
      "offset": [
        991,
        1235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE"
    },
    "181": {
      "fn": "Trickle.setDca",
      "jump": "i",
      "offset": [
        991,
        1235
      ],
      "op": "JUMP",
      "path": "0"
    },
    "182": {
      "fn": "Trickle.setDca",
      "offset": [
        991,
        1235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "fn": "Trickle.setDca",
      "offset": [
        991,
        1235
      ],
      "op": "STOP",
      "path": "0"
    },
    "184": {
      "offset": [
        702,
        771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3"
    },
    "188": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "191": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "192": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "194": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32D"
    },
    "197": {
      "fn": "Trickle.setDca",
      "jump": "i",
      "offset": [
        702,
        771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "198": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "199": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "201": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "203": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "204": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "DUP2",
      "path": "0"
    },
    "205": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "206": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "208": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "209": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "DUP4",
      "path": "0"
    },
    "210": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "211": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "213": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "214": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "DUP5",
      "path": "0"
    },
    "215": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "216": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "217": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "218": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "219": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "220": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "DUP3",
      "path": "0"
    },
    "221": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "222": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "223": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "224": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "225": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "DUP2",
      "path": "0"
    },
    "226": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "227": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "228": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "230": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "231": {
      "op": "SWAP1"
    },
    "232": {
      "op": "DUP2"
    },
    "233": {
      "op": "MSTORE"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "236": {
      "op": "ADD"
    },
    "237": {
      "offset": [
        702,
        771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "238": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "240": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "241": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "242": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "243": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "SUB",
      "path": "0"
    },
    "244": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "245": {
      "fn": "Trickle.setDca",
      "offset": [
        702,
        771
      ],
      "op": "RETURN",
      "path": "0"
    },
    "246": {
      "offset": [
        520,
        548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "247": {
      "fn": "Trickle.setDca",
      "offset": [
        520,
        548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3"
    },
    "250": {
      "fn": "Trickle.setDca",
      "offset": [
        520,
        548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "252": {
      "fn": "Trickle.setDca",
      "offset": [
        520,
        548
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "253": {
      "fn": "Trickle.setDca",
      "offset": [
        520,
        548
      ],
      "op": "DUP2",
      "path": "0"
    },
    "254": {
      "fn": "Trickle.setDca",
      "offset": [
        520,
        548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "255": {
      "offset": [
        554,
        605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "256": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3"
    },
    "259": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "262": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "263": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "265": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x360"
    },
    "268": {
      "fn": "Trickle.setDca",
      "jump": "i",
      "offset": [
        554,
        605
      ],
      "op": "JUMP",
      "path": "0"
    },
    "269": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "270": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "272": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "274": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "275": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "277": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "278": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "279": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "280": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "282": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "283": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "284": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "285": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "286": {
      "fn": "Trickle.setDca",
      "offset": [
        554,
        605
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1516,
        1751
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "288": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1516,
        1751
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "291": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1516,
        1751
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D"
    },
    "294": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1516,
        1751
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "295": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1516,
        1751
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "297": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1516,
        1751
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x382"
    },
    "300": {
      "fn": "Trickle.performUpkeep",
      "jump": "i",
      "offset": [
        1516,
        1751
      ],
      "op": "JUMP",
      "path": "0"
    },
    "301": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1516,
        1751
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "302": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1516,
        1751
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x235"
    },
    "305": {
      "fn": "Trickle.performUpkeep",
      "jump": "i",
      "offset": [
        1516,
        1751
      ],
      "op": "JUMP",
      "path": "0"
    },
    "306": {
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145"
    },
    "310": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "313": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "314": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "316": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F4"
    },
    "319": {
      "fn": "Trickle.performUpkeep",
      "jump": "i",
      "offset": [
        666,
        696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "320": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "321": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24E"
    },
    "324": {
      "fn": "Trickle.performUpkeep",
      "jump": "i",
      "offset": [
        666,
        696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "325": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "326": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "328": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "335": {
      "op": "SHL"
    },
    "336": {
      "op": "SUB"
    },
    "337": {
      "op": "SWAP1"
    },
    "338": {
      "op": "SWAP2"
    },
    "339": {
      "op": "AND"
    },
    "340": {
      "op": "DUP2"
    },
    "341": {
      "op": "MSTORE"
    },
    "342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "344": {
      "op": "ADD"
    },
    "345": {
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED"
    },
    "348": {
      "op": "JUMP"
    },
    "349": {
      "offset": [
        347,
        369
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "350": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3"
    },
    "353": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "355": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "356": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "DUP2",
      "path": "0"
    },
    "357": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "JUMP",
      "path": "0"
    },
    "358": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "359": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x179"
    },
    "362": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174"
    },
    "365": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "366": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "368": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x382"
    },
    "371": {
      "fn": "Trickle.checkUpkeep",
      "jump": "i",
      "offset": [
        1241,
        1510
      ],
      "op": "JUMP",
      "path": "0"
    },
    "372": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "373": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x278"
    },
    "376": {
      "fn": "Trickle.checkUpkeep",
      "jump": "i",
      "offset": [
        1241,
        1510
      ],
      "op": "JUMP",
      "path": "0"
    },
    "377": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "378": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "380": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "381": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED"
    },
    "384": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "385": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "386": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "387": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40D"
    },
    "390": {
      "fn": "Trickle.checkUpkeep",
      "jump": "i",
      "offset": [
        1241,
        1510
      ],
      "op": "JUMP",
      "path": "0"
    },
    "391": {
      "offset": [
        611,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "392": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3"
    },
    "395": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x195"
    },
    "398": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "399": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "401": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x360"
    },
    "404": {
      "fn": "Trickle.checkUpkeep",
      "jump": "i",
      "offset": [
        611,
        660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "405": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "406": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "408": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "410": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "411": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "413": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "414": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "415": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "416": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "418": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "419": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "420": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "421": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "422": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "423": {
      "offset": [
        481,
        514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "424": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        481,
        514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3"
    },
    "427": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        481,
        514
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "460": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        481,
        514
      ],
      "op": "DUP2",
      "path": "0"
    },
    "461": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        481,
        514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "462": {
      "fn": "Trickle.setDca",
      "offset": [
        991,
        1235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "463": {
      "fn": "Trickle.setDca",
      "offset": [
        1104,
        1105
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "465": {
      "fn": "Trickle.setDca",
      "offset": [
        1094,
        1101
      ],
      "op": "DUP3",
      "path": "0"
    },
    "466": {
      "branch": 7,
      "fn": "Trickle.setDca",
      "offset": [
        1094,
        1105
      ],
      "op": "GT",
      "path": "0"
    },
    "467": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x217"
    },
    "470": {
      "branch": 7,
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "471": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "473": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "474": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "478": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "480": {
      "op": "SHL"
    },
    "481": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "482": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "485": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "487": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "DUP3",
      "path": "0"
    },
    "488": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "ADD",
      "path": "0"
    },
    "489": {
      "op": "MSTORE"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "494": {
      "op": "DUP3"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "op": "MSTORE"
    },
    "497": {
      "op": "PUSH18",
      "value": "0x616D6F756E742063616E6E6F74206265203"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "518": {
      "op": "SHL"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "521": {
      "op": "DUP3"
    },
    "522": {
      "op": "ADD"
    },
    "523": {
      "op": "MSTORE"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "526": {
      "op": "ADD"
    },
    "527": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "529": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "530": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "DUP1",
      "path": "0"
    },
    "531": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "532": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "SUB",
      "path": "0"
    },
    "533": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "534": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "535": {
      "fn": "Trickle.setDca",
      "offset": [
        1086,
        1128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "536": {
      "fn": "Trickle.setDca",
      "offset": [
        1155,
        1165
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 1
    },
    "537": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "539": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1166
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "540": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1166
      ],
      "op": "DUP2",
      "path": "0"
    },
    "541": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1166
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "542": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "544": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "546": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1166
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "547": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1166
      ],
      "op": "DUP2",
      "path": "0"
    },
    "548": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1166
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "549": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "551": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1166
      ],
      "op": "DUP1",
      "path": "0"
    },
    "552": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1166
      ],
      "op": "DUP4",
      "path": "0"
    },
    "553": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1166
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "554": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1182
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "555": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1182
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "556": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1182
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "557": {
      "fn": "Trickle.setDca",
      "offset": [
        1138,
        1182
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "558": {
      "fn": "Trickle.setDca",
      "offset": [
        1192,
        1206
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x3"
    },
    "560": {
      "fn": "Trickle.setDca",
      "offset": [
        1192,
        1218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "561": {
      "fn": "Trickle.setDca",
      "offset": [
        1192,
        1218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "562": {
      "fn": "Trickle.setDca",
      "offset": [
        1192,
        1218
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "563": {
      "fn": "Trickle.setDca",
      "offset": [
        1192,
        1228
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "564": {
      "fn": "Trickle.setDca",
      "jump": "o",
      "offset": [
        991,
        1235
      ],
      "op": "JUMP",
      "path": "0"
    },
    "565": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1516,
        1751
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "566": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1611,
        1626
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 3
    },
    "567": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1595,
        1608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "569": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1595,
        1626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "570": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1595,
        1626
      ],
      "op": "DUP2",
      "path": "0"
    },
    "571": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1595,
        1626
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "572": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1646,
        1653
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "574": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1646,
        1653
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "575": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1646,
        1657
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x247"
    },
    "578": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1646,
        1657
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "579": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1646,
        1657
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x482"
    },
    "582": {
      "fn": "Trickle.performUpkeep",
      "jump": "i",
      "offset": [
        1646,
        1657
      ],
      "op": "JUMP",
      "path": "0"
    },
    "583": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1646,
        1657
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "584": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1636,
        1643
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "586": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        1636,
        1657
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "587": {
      "op": "POP"
    },
    "588": {
      "op": "POP"
    },
    "589": {
      "fn": "Trickle.performUpkeep",
      "jump": "o",
      "offset": [
        1516,
        1751
      ],
      "op": "JUMP",
      "path": "0"
    },
    "590": {
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "591": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "593": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "594": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "595": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "596": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "597": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "LT",
      "path": "0"
    },
    "598": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25E"
    },
    "601": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "602": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "604": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "605": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "REVERT",
      "path": "0"
    },
    "606": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "607": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "609": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "610": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP3",
      "path": "0"
    },
    "611": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "612": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "614": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "615": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "616": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "617": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "ADD",
      "path": "0"
    },
    "618": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "625": {
      "op": "SHL"
    },
    "626": {
      "op": "SUB"
    },
    "627": {
      "offset": [
        666,
        696
      ],
      "op": "AND",
      "path": "0"
    },
    "628": {
      "fn": "Trickle.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "629": {
      "op": "POP"
    },
    "630": {
      "offset": [
        666,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "631": {
      "fn": "Trickle.performUpkeep",
      "jump": "o",
      "offset": [
        666,
        696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "632": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "633": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1352,
        1369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "635": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1371,
        1395
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "637": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1462,
        1470
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 5,
      "value": "0x0"
    },
    "670": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1445,
        1458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "672": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1445,
        1458
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "673": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1427,
        1442
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "674": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1427,
        1458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AB"
    },
    "677": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1427,
        1458
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "678": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1427,
        1458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "679": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1427,
        1458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49A"
    },
    "682": {
      "fn": "Trickle.checkUpkeep",
      "jump": "i",
      "offset": [
        1427,
        1458
      ],
      "op": "JUMP",
      "path": "0"
    },
    "683": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1427,
        1458
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "684": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1426,
        1470
      ],
      "op": "GT",
      "path": "0"
    },
    "685": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1411,
        1470
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "686": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1411,
        1470
      ],
      "op": "POP",
      "path": "0"
    },
    "687": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1494,
        1503
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 6
    },
    "688": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1494,
        1503
      ],
      "op": "DUP4",
      "path": "0"
    },
    "689": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "DUP1",
      "path": "0"
    },
    "690": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "DUP1",
      "path": "0"
    },
    "691": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "693": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "ADD",
      "path": "0"
    },
    "694": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "696": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "DUP1",
      "path": "0"
    },
    "697": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "698": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "DIV",
      "path": "0"
    },
    "699": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "MUL",
      "path": "0"
    },
    "700": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "702": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "ADD",
      "path": "0"
    },
    "703": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "705": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "706": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "707": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "DUP2",
      "path": "0"
    },
    "708": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "ADD",
      "path": "0"
    },
    "709": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "711": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "712": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "DUP1",
      "path": "0"
    },
    "713": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "714": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "715": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "716": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "717": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "DUP2",
      "path": "0"
    },
    "718": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "DUP2",
      "path": "0"
    },
    "719": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "720": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "722": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "ADD",
      "path": "0"
    },
    "723": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "DUP4",
      "path": "0"
    },
    "724": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "DUP4",
      "path": "0"
    },
    "725": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "DUP1",
      "path": "0"
    },
    "726": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "DUP3",
      "path": "0"
    },
    "727": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "DUP5",
      "path": "0"
    },
    "728": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "729": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "731": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "732": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "ADD",
      "path": "0"
    },
    "733": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "734": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "735": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "736": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "737": {
      "op": "POP"
    },
    "738": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "739": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "740": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "741": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1480,
        1503
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "742": {
      "op": "POP"
    },
    "743": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "744": {
      "fn": "Trickle.checkUpkeep",
      "offset": [
        1241,
        1510
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "745": {
      "op": "POP"
    },
    "746": {
      "op": "POP"
    },
    "747": {
      "op": "POP"
    },
    "748": {
      "op": "POP"
    },
    "749": {
      "op": "POP"
    },
    "750": {
      "fn": "Trickle.checkUpkeep",
      "jump": "o",
      "offset": [
        1241,
        1510
      ],
      "op": "JUMP",
      "path": "0"
    },
    "751": {
      "op": "JUMPDEST"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "754": {
      "op": "DUP1"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "757": {
      "op": "DUP4"
    },
    "758": {
      "op": "DUP6"
    },
    "759": {
      "op": "SUB"
    },
    "760": {
      "op": "SLT"
    },
    "761": {
      "op": "ISZERO"
    },
    "762": {
      "op": "PUSH2",
      "value": "0x302"
    },
    "765": {
      "op": "JUMPI"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "768": {
      "op": "DUP1"
    },
    "769": {
      "op": "REVERT"
    },
    "770": {
      "op": "JUMPDEST"
    },
    "771": {
      "op": "POP"
    },
    "772": {
      "op": "POP"
    },
    "773": {
      "op": "DUP1"
    },
    "774": {
      "op": "CALLDATALOAD"
    },
    "775": {
      "op": "SWAP3"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "778": {
      "op": "SWAP1"
    },
    "779": {
      "op": "SWAP2"
    },
    "780": {
      "op": "ADD"
    },
    "781": {
      "op": "CALLDATALOAD"
    },
    "782": {
      "op": "SWAP2"
    },
    "783": {
      "op": "POP"
    },
    "784": {
      "jump": "o",
      "op": "JUMP"
    },
    "785": {
      "op": "JUMPDEST"
    },
    "786": {
      "op": "DUP1"
    },
    "787": {
      "op": "CALLDATALOAD"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "op": "SUB"
    },
    "796": {
      "op": "DUP2"
    },
    "797": {
      "op": "AND"
    },
    "798": {
      "op": "DUP2"
    },
    "799": {
      "op": "EQ"
    },
    "800": {
      "op": "PUSH2",
      "value": "0x328"
    },
    "803": {
      "op": "JUMPI"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "806": {
      "op": "DUP1"
    },
    "807": {
      "op": "REVERT"
    },
    "808": {
      "op": "JUMPDEST"
    },
    "809": {
      "op": "SWAP2"
    },
    "810": {
      "op": "SWAP1"
    },
    "811": {
      "op": "POP"
    },
    "812": {
      "jump": "o",
      "op": "JUMP"
    },
    "813": {
      "op": "JUMPDEST"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "816": {
      "op": "DUP1"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "819": {
      "op": "DUP4"
    },
    "820": {
      "op": "DUP6"
    },
    "821": {
      "op": "SUB"
    },
    "822": {
      "op": "SLT"
    },
    "823": {
      "op": "ISZERO"
    },
    "824": {
      "op": "PUSH2",
      "value": "0x340"
    },
    "827": {
      "op": "JUMPI"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "830": {
      "op": "DUP1"
    },
    "831": {
      "op": "REVERT"
    },
    "832": {
      "op": "JUMPDEST"
    },
    "833": {
      "op": "PUSH2",
      "value": "0x349"
    },
    "836": {
      "op": "DUP4"
    },
    "837": {
      "op": "PUSH2",
      "value": "0x311"
    },
    "840": {
      "jump": "i",
      "op": "JUMP"
    },
    "841": {
      "op": "JUMPDEST"
    },
    "842": {
      "op": "SWAP2"
    },
    "843": {
      "op": "POP"
    },
    "844": {
      "op": "PUSH2",
      "value": "0x357"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "849": {
      "op": "DUP5"
    },
    "850": {
      "op": "ADD"
    },
    "851": {
      "op": "PUSH2",
      "value": "0x311"
    },
    "854": {
      "jump": "i",
      "op": "JUMP"
    },
    "855": {
      "op": "JUMPDEST"
    },
    "856": {
      "op": "SWAP1"
    },
    "857": {
      "op": "POP"
    },
    "858": {
      "op": "SWAP3"
    },
    "859": {
      "op": "POP"
    },
    "860": {
      "op": "SWAP3"
    },
    "861": {
      "op": "SWAP1"
    },
    "862": {
      "op": "POP"
    },
    "863": {
      "jump": "o",
      "op": "JUMP"
    },
    "864": {
      "op": "JUMPDEST"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "869": {
      "op": "DUP3"
    },
    "870": {
      "op": "DUP5"
    },
    "871": {
      "op": "SUB"
    },
    "872": {
      "op": "SLT"
    },
    "873": {
      "op": "ISZERO"
    },
    "874": {
      "op": "PUSH2",
      "value": "0x372"
    },
    "877": {
      "op": "JUMPI"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "880": {
      "op": "DUP1"
    },
    "881": {
      "op": "REVERT"
    },
    "882": {
      "op": "JUMPDEST"
    },
    "883": {
      "op": "PUSH2",
      "value": "0x37B"
    },
    "886": {
      "op": "DUP3"
    },
    "887": {
      "op": "PUSH2",
      "value": "0x311"
    },
    "890": {
      "jump": "i",
      "op": "JUMP"
    },
    "891": {
      "op": "JUMPDEST"
    },
    "892": {
      "op": "SWAP4"
    },
    "893": {
      "op": "SWAP3"
    },
    "894": {
      "op": "POP"
    },
    "895": {
      "op": "POP"
    },
    "896": {
      "op": "POP"
    },
    "897": {
      "jump": "o",
      "op": "JUMP"
    },
    "898": {
      "op": "JUMPDEST"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "901": {
      "op": "DUP1"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "904": {
      "op": "DUP4"
    },
    "905": {
      "op": "DUP6"
    },
    "906": {
      "op": "SUB"
    },
    "907": {
      "op": "SLT"
    },
    "908": {
      "op": "ISZERO"
    },
    "909": {
      "op": "PUSH2",
      "value": "0x395"
    },
    "912": {
      "op": "JUMPI"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "915": {
      "op": "DUP1"
    },
    "916": {
      "op": "REVERT"
    },
    "917": {
      "op": "JUMPDEST"
    },
    "918": {
      "op": "DUP3"
    },
    "919": {
      "op": "CALLDATALOAD"
    },
    "920": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "929": {
      "op": "DUP1"
    },
    "930": {
      "op": "DUP3"
    },
    "931": {
      "op": "GT"
    },
    "932": {
      "op": "ISZERO"
    },
    "933": {
      "op": "PUSH2",
      "value": "0x3AD"
    },
    "936": {
      "op": "JUMPI"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "939": {
      "op": "DUP1"
    },
    "940": {
      "op": "REVERT"
    },
    "941": {
      "op": "JUMPDEST"
    },
    "942": {
      "op": "DUP2"
    },
    "943": {
      "op": "DUP6"
    },
    "944": {
      "op": "ADD"
    },
    "945": {
      "op": "SWAP2"
    },
    "946": {
      "op": "POP"
    },
    "947": {
      "op": "DUP6"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "950": {
      "op": "DUP4"
    },
    "951": {
      "op": "ADD"
    },
    "952": {
      "op": "SLT"
    },
    "953": {
      "op": "PUSH2",
      "value": "0x3C1"
    },
    "956": {
      "op": "JUMPI"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "959": {
      "op": "DUP1"
    },
    "960": {
      "op": "REVERT"
    },
    "961": {
      "op": "JUMPDEST"
    },
    "962": {
      "op": "DUP2"
    },
    "963": {
      "op": "CALLDATALOAD"
    },
    "964": {
      "op": "DUP2"
    },
    "965": {
      "op": "DUP2"
    },
    "966": {
      "op": "GT"
    },
    "967": {
      "op": "ISZERO"
    },
    "968": {
      "op": "PUSH2",
      "value": "0x3D0"
    },
    "971": {
      "op": "JUMPI"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "974": {
      "op": "DUP1"
    },
    "975": {
      "op": "REVERT"
    },
    "976": {
      "op": "JUMPDEST"
    },
    "977": {
      "op": "DUP7"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "980": {
      "op": "DUP3"
    },
    "981": {
      "op": "DUP6"
    },
    "982": {
      "op": "ADD"
    },
    "983": {
      "op": "ADD"
    },
    "984": {
      "op": "GT"
    },
    "985": {
      "op": "ISZERO"
    },
    "986": {
      "op": "PUSH2",
      "value": "0x3E2"
    },
    "989": {
      "op": "JUMPI"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "992": {
      "op": "DUP1"
    },
    "993": {
      "op": "REVERT"
    },
    "994": {
      "op": "JUMPDEST"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "997": {
      "op": "SWAP3"
    },
    "998": {
      "op": "SWAP1"
    },
    "999": {
      "op": "SWAP3"
    },
    "1000": {
      "op": "ADD"
    },
    "1001": {
      "op": "SWAP7"
    },
    "1002": {
      "op": "SWAP2"
    },
    "1003": {
      "op": "SWAP6"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "op": "SWAP1"
    },
    "1006": {
      "op": "SWAP4"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "op": "POP"
    },
    "1010": {
      "op": "POP"
    },
    "1011": {
      "jump": "o",
      "op": "JUMP"
    },
    "1012": {
      "op": "JUMPDEST"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1017": {
      "op": "DUP3"
    },
    "1018": {
      "op": "DUP5"
    },
    "1019": {
      "op": "SUB"
    },
    "1020": {
      "op": "SLT"
    },
    "1021": {
      "op": "ISZERO"
    },
    "1022": {
      "op": "PUSH2",
      "value": "0x406"
    },
    "1025": {
      "op": "JUMPI"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1028": {
      "op": "DUP1"
    },
    "1029": {
      "op": "REVERT"
    },
    "1030": {
      "op": "JUMPDEST"
    },
    "1031": {
      "op": "POP"
    },
    "1032": {
      "op": "CALLDATALOAD"
    },
    "1033": {
      "op": "SWAP2"
    },
    "1034": {
      "op": "SWAP1"
    },
    "1035": {
      "op": "POP"
    },
    "1036": {
      "jump": "o",
      "op": "JUMP"
    },
    "1037": {
      "op": "JUMPDEST"
    },
    "1038": {
      "op": "DUP3"
    },
    "1039": {
      "op": "ISZERO"
    },
    "1040": {
      "op": "ISZERO"
    },
    "1041": {
      "op": "DUP2"
    },
    "1042": {
      "op": "MSTORE"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1049": {
      "op": "DUP2"
    },
    "1050": {
      "op": "DUP5"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "op": "MSTORE"
    },
    "1053": {
      "op": "DUP4"
    },
    "1054": {
      "op": "MLOAD"
    },
    "1055": {
      "op": "DUP1"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1058": {
      "op": "DUP6"
    },
    "1059": {
      "op": "ADD"
    },
    "1060": {
      "op": "MSTORE"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1063": {
      "op": "JUMPDEST"
    },
    "1064": {
      "op": "DUP2"
    },
    "1065": {
      "op": "DUP2"
    },
    "1066": {
      "op": "LT"
    },
    "1067": {
      "op": "ISZERO"
    },
    "1068": {
      "op": "PUSH2",
      "value": "0x443"
    },
    "1071": {
      "op": "JUMPI"
    },
    "1072": {
      "op": "DUP6"
    },
    "1073": {
      "op": "DUP2"
    },
    "1074": {
      "op": "ADD"
    },
    "1075": {
      "op": "DUP4"
    },
    "1076": {
      "op": "ADD"
    },
    "1077": {
      "op": "MLOAD"
    },
    "1078": {
      "op": "DUP6"
    },
    "1079": {
      "op": "DUP3"
    },
    "1080": {
      "op": "ADD"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1083": {
      "op": "ADD"
    },
    "1084": {
      "op": "MSTORE"
    },
    "1085": {
      "op": "DUP3"
    },
    "1086": {
      "op": "ADD"
    },
    "1087": {
      "op": "PUSH2",
      "value": "0x427"
    },
    "1090": {
      "op": "JUMP"
    },
    "1091": {
      "op": "JUMPDEST"
    },
    "1092": {
      "op": "DUP2"
    },
    "1093": {
      "op": "DUP2"
    },
    "1094": {
      "op": "GT"
    },
    "1095": {
      "op": "ISZERO"
    },
    "1096": {
      "op": "PUSH2",
      "value": "0x455"
    },
    "1099": {
      "op": "JUMPI"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1104": {
      "op": "DUP4"
    },
    "1105": {
      "op": "DUP8"
    },
    "1106": {
      "op": "ADD"
    },
    "1107": {
      "op": "ADD"
    },
    "1108": {
      "op": "MSTORE"
    },
    "1109": {
      "op": "JUMPDEST"
    },
    "1110": {
      "op": "POP"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1113": {
      "op": "ADD"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1116": {
      "op": "NOT"
    },
    "1117": {
      "op": "AND"
    },
    "1118": {
      "op": "SWAP3"
    },
    "1119": {
      "op": "SWAP1"
    },
    "1120": {
      "op": "SWAP3"
    },
    "1121": {
      "op": "ADD"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1124": {
      "op": "ADD"
    },
    "1125": {
      "op": "SWAP5"
    },
    "1126": {
      "op": "SWAP4"
    },
    "1127": {
      "op": "POP"
    },
    "1128": {
      "op": "POP"
    },
    "1129": {
      "op": "POP"
    },
    "1130": {
      "op": "POP"
    },
    "1131": {
      "jump": "o",
      "op": "JUMP"
    },
    "1132": {
      "op": "JUMPDEST"
    },
    "1133": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1140": {
      "op": "SHL"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1143": {
      "op": "MSTORE"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1148": {
      "op": "MSTORE"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1153": {
      "op": "REVERT"
    },
    "1154": {
      "op": "JUMPDEST"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1157": {
      "op": "DUP3"
    },
    "1158": {
      "op": "NOT"
    },
    "1159": {
      "op": "DUP3"
    },
    "1160": {
      "op": "GT"
    },
    "1161": {
      "op": "ISZERO"
    },
    "1162": {
      "op": "PUSH2",
      "value": "0x495"
    },
    "1165": {
      "op": "JUMPI"
    },
    "1166": {
      "op": "PUSH2",
      "value": "0x495"
    },
    "1169": {
      "op": "PUSH2",
      "value": "0x46C"
    },
    "1172": {
      "jump": "i",
      "op": "JUMP"
    },
    "1173": {
      "op": "JUMPDEST"
    },
    "1174": {
      "op": "POP"
    },
    "1175": {
      "op": "ADD"
    },
    "1176": {
      "op": "SWAP1"
    },
    "1177": {
      "jump": "o",
      "op": "JUMP"
    },
    "1178": {
      "op": "JUMPDEST"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1181": {
      "op": "DUP3"
    },
    "1182": {
      "op": "DUP3"
    },
    "1183": {
      "op": "LT"
    },
    "1184": {
      "op": "ISZERO"
    },
    "1185": {
      "op": "PUSH2",
      "value": "0x4AC"
    },
    "1188": {
      "op": "JUMPI"
    },
    "1189": {
      "op": "PUSH2",
      "value": "0x4AC"
    },
    "1192": {
      "op": "PUSH2",
      "value": "0x46C"
    },
    "1195": {
      "jump": "i",
      "op": "JUMP"
    },
    "1196": {
      "op": "JUMPDEST"
    },
    "1197": {
      "op": "POP"
    },
    "1198": {
      "op": "SUB"
    },
    "1199": {
      "op": "SWAP1"
    },
    "1200": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7249ce5120fe237b0578fcb17ab2d610d687a31c",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface KeeperCompatibleInterface {\n    function checkUpkeep(bytes calldata checkData)\n        external\n        returns (bool upkeepNeeded, bytes memory performData);\n\n    function performUpkeep(bytes calldata performData) external;\n}\n\ncontract Trickle is KeeperCompatibleInterface {\n    uint256 public counter; // Public counter variable\n\n    // Use an interval in seconds and a timestamp to slow execution of Upkeep\n    uint256 public immutable interval;\n    uint256 public lastTimeStamp;\n    mapping(address => uint256) public user_to_interval;\n    mapping(address => uint256) public user_to_amount;\n    address[] public allowedTokens;\n    mapping(address => mapping(address => uint256)) public stakingBalance;\n\n    constructor(uint256 updateInterval) {\n        interval = updateInterval;\n        lastTimeStamp = block.timestamp;\n        counter = 0;\n    }\n\n    // TODO: update conntract ABI\n        // address _token_to_buy\n    function setDca(\n        uint256 _amount,\n        uint256 _dca_interval\n    ) public {\n        require(_amount > 0, \"amount cannot be 0\");\n        user_to_interval[msg.sender] = _dca_interval;\n        user_to_amount[msg.sender] = _amount;\n    }\n\n    function checkUpkeep(bytes calldata checkData)\n        external\n        view\n        override\n        returns (bool upkeepNeeded, bytes memory performData)\n    {\n        upkeepNeeded = (block.timestamp - lastTimeStamp) > interval;\n        performData = checkData;\n    }\n\n    function performUpkeep(bytes calldata performData) external override {\n        lastTimeStamp = block.timestamp;\n        counter = counter + 1;\n        performData;\n        // do stuff with user -> interval and user -> amount here\n    }\n}\n\n\n",
  "sourceMap": "295:1458:0:-:0;;;778:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;824:25;;875:15;859:13;:31;910:1;900:11;;295:1458;;14:184:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:1;;14:184;-1:-1:-1;14:184:1:o;:::-;295:1458:0;;;;;;;;;;",
  "sourcePath": "contracts/Trickle.sol",
  "type": "contract"
}

