{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "updateInterval",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "checkData",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dca_interval",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "fundContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "interval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "tokenIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "user_to_amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "user_to_interval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Counter.sol"
  },
  "ast": {
    "absolutePath": "contracts/Counter.sol",
    "exportedSymbols": {
      "Counter": [
        176
      ],
      "KeeperCompatibleInterface": [
        16
      ]
    },
    "id": 177,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "KeeperCompatibleInterface",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 16,
        "linearizedBaseContracts": [
          16
        ],
        "name": "KeeperCompatibleInterface",
        "nameLocation": "67:25:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "6e04ff0d",
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "108:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nameLocation": "135:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "120:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "120:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "119:26:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "185:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "180:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "212:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "199:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "179:45:0"
            },
            "scope": 16,
            "src": "99:126:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "4585e33b",
            "id": 15,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "240:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "269:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "254:26:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "253:28:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:0:0"
            },
            "scope": 16,
            "src": "231:60:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 177,
        "src": "57:236:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17,
              "name": "KeeperCompatibleInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16,
              "src": "315:25:0"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "315:25:0"
          }
        ],
        "canonicalName": "Counter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 176,
        "linearizedBaseContracts": [
          176,
          16
        ],
        "name": "Counter",
        "nameLocation": "304:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "61bc221a",
            "id": 20,
            "mutability": "mutable",
            "name": "counter",
            "nameLocation": "362:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 176,
            "src": "347:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "347:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "947a36fb",
            "id": 22,
            "mutability": "immutable",
            "name": "interval",
            "nameLocation": "506:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 176,
            "src": "481:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "481:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3f3b3b27",
            "id": 24,
            "mutability": "mutable",
            "name": "lastTimeStamp",
            "nameLocation": "535:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 176,
            "src": "520:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "520:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3f774675",
            "id": 28,
            "mutability": "mutable",
            "name": "user_to_interval",
            "nameLocation": "589:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 176,
            "src": "554:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "562:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "554:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 26,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "573:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7bdb76b6",
            "id": 32,
            "mutability": "mutable",
            "name": "user_to_amount",
            "nameLocation": "646:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 176,
            "src": "611:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 31,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "619:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "611:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 30,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "630:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5e5f2e26",
            "id": 35,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "683:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 176,
            "src": "666:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "666:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 34,
              "nodeType": "ArrayTypeName",
              "src": "666:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "29161a00",
            "id": 41,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nameLocation": "757:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 176,
            "src": "702:69:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 40,
              "keyType": {
                "id": 36,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "710:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "702:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 39,
                "keyType": {
                  "id": 37,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "729:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "721:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 38,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "740:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "814:104:0",
              "statements": [
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "824:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47,
                      "name": "updateInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "835:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "824:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "824:25:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "859:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "875:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "875:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "859:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "859:31:0"
                },
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "900:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "910:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "900:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "900:11:0"
                }
              ]
            },
            "id": 60,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "updateInterval",
                  "nameLocation": "798:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "790:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "789:24:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:0"
            },
            "scope": 176,
            "src": "778:140:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "985:302:0",
              "statements": [
                {
                  "body": {
                    "id": 87,
                    "nodeType": "Block",
                    "src": "1143:116:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 78,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "1161:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 80,
                            "indexExpression": {
                              "id": 79,
                              "name": "allowedTokensIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "1175:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1161:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 81,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "1198:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1161:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 86,
                        "nodeType": "IfStatement",
                        "src": "1157:92:0",
                        "trueBody": {
                          "id": 85,
                          "nodeType": "Block",
                          "src": "1205:44:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 83,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1230:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 66,
                              "id": 84,
                              "nodeType": "Return",
                              "src": "1223:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 71,
                      "name": "allowedTokensIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1057:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 72,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1078:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1078:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1057:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88,
                  "initializationExpression": {
                    "assignments": [
                      68
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 68,
                        "mutability": "mutable",
                        "name": "allowedTokensIndex",
                        "nameLocation": "1021:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "1013:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 67,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1013:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 70,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1042:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1013:30:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1112:20:0",
                      "subExpression": {
                        "id": 75,
                        "name": "allowedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "1112:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 77,
                    "nodeType": "ExpressionStatement",
                    "src": "1112:20:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "995:264:0"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1275:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 66,
                  "id": 90,
                  "nodeType": "Return",
                  "src": "1268:12:0"
                }
              ]
            },
            "functionSelector": "dd5b8467",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenIsAllowed",
            "nameLocation": "933:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "956:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "948:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "947:15:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "979:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "979:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "978:6:0"
            },
            "scope": 176,
            "src": "924:363:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "1407:273:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "1466:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1476:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1466:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742063616e6e6f742062652030",
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1479:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        },
                        "value": "amount cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        }
                      ],
                      "id": 101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1458:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1458:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 110,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "1533:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 109,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "1518:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1518:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e2063757272656e746c792069736e277420616c6c6f776564",
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1541:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e076a5afaf59e476bf944ab215cb05dbf949917e41ad6daa384effb7af0dcce4",
                          "typeString": "literal_string \"Token currently isn't allowed\""
                        },
                        "value": "Token currently isn't allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e076a5afaf59e476bf944ab215cb05dbf949917e41ad6daa384effb7af0dcce4",
                          "typeString": "literal_string \"Token currently isn't allowed\""
                        }
                      ],
                      "id": 108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1510:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1510:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:63:0"
                },
                {
                  "expression": {
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 115,
                        "name": "user_to_interval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1583:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 118,
                      "indexExpression": {
                        "expression": {
                          "id": 116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1600:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1600:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1583:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 119,
                      "name": "_dca_interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "1614:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1583:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:44:0"
                },
                {
                  "expression": {
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 122,
                        "name": "user_to_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1637:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 125,
                      "indexExpression": {
                        "expression": {
                          "id": 123,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1652:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1652:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1637:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 126,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "1666:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1637:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1637:36:0"
                }
              ]
            },
            "functionSelector": "6c92a800",
            "id": 130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fundContract",
            "nameLocation": "1302:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1332:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1324:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "_dca_interval",
                  "nameLocation": "1357:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1349:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1388:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1380:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1314:85:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1407:0:0"
            },
            "scope": 176,
            "src": "1293:387:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10
            ],
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1846:109:0",
              "statements": [
                {
                  "expression": {
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 140,
                      "name": "upkeepNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "1856:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 141,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1872:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1872:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 143,
                              "name": "lastTimeStamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "1890:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1872:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 145,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1871:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 146,
                        "name": "interval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1907:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1871:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1856:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1856:59:0"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 150,
                      "name": "performData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "1925:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 151,
                      "name": "checkData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "1939:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "1925:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "1925:23:0"
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "1695:11:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 134,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1771:8:0"
            },
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nameLocation": "1722:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1707:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1707:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1706:26:0"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "1802:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1797:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "1829:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1816:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1816:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1796:45:0"
            },
            "scope": 176,
            "src": "1686:269:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15
            ],
            "body": {
              "id": 174,
              "nodeType": "Block",
              "src": "2030:166:0",
              "statements": [
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 161,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2040:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 162,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2056:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2056:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2040:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2040:31:0"
                },
                {
                  "expression": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 166,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2081:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 167,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2091:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2101:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2091:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2081:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:21:0"
                },
                {
                  "expression": {
                    "id": 172,
                    "name": "performData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 157,
                    "src": "2112:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:11:0"
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "1970:13:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 159,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2021:8:0"
            },
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "1999:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "1984:26:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1984:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1983:28:0"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2030:0:0"
            },
            "scope": 176,
            "src": "1961:235:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 177,
        "src": "295:1903:0",
        "usedErrors": []
      }
    ],
    "src": "32:2167:0"
  },
  "bytecode": "60a060405234801561001057600080fd5b5060405161069438038061069483398101604081905261002f9161003f565b6080524260015560008055610058565b60006020828403121561005157600080fd5b5051919050565b60805161061a61007a600039600081816101b70152610303015261061a6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806361bc221a1161007157806361bc221a146101555780636c92a8001461015e5780636e04ff0d146101715780637bdb76b614610192578063947a36fb146101b2578063dd5b8467146101d957600080fd5b806329161a00146100ae5780633f3b3b27146100ec5780633f774675146100f55780634585e33b146101155780635e5f2e261461012a575b600080fd5b6100d96100bc3660046103fa565b600560209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6100d960015481565b6100d961010336600461042d565b60026020526000908152604090205481565b61012861012336600461044f565b6101fc565b005b61013d6101383660046104c1565b610215565b6040516001600160a01b0390911681526020016100e3565b6100d960005481565b61012861016c3660046104da565b61023f565b61018461017f36600461044f565b6102fd565b6040516100e392919061050f565b6100d96101a036600461042d565b60036020526000908152604090205481565b6100d97f000000000000000000000000000000000000000000000000000000000000000081565b6101ec6101e736600461042d565b610374565b60405190151581526020016100e3565b42600190815560005461020e91610584565b6000555050565b6004818154811061022557600080fd5b6000918252602090912001546001600160a01b0316905081565b600083116102895760405162461bcd60e51b81526020600482015260126024820152710616d6f756e742063616e6e6f7420626520360741b60448201526064015b60405180910390fd5b61029281610374565b6102de5760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e2063757272656e746c792069736e277420616c6c6f7765640000006044820152606401610280565b5033600090815260026020908152604080832093909355600390522055565b600060607f000000000000000000000000000000000000000000000000000000000000000060015442610330919061059c565b11915083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250949792965091945050505050565b6000805b6004548110156103d557826001600160a01b03166004828154811061039f5761039f6105b3565b6000918252602090912001546001600160a01b031614156103c35750600192915050565b806103cd816105c9565b915050610378565b50600092915050565b80356001600160a01b03811681146103f557600080fd5b919050565b6000806040838503121561040d57600080fd5b610416836103de565b9150610424602084016103de565b90509250929050565b60006020828403121561043f57600080fd5b610448826103de565b9392505050565b6000806020838503121561046257600080fd5b823567ffffffffffffffff8082111561047a57600080fd5b818501915085601f83011261048e57600080fd5b81358181111561049d57600080fd5b8660208285010111156104af57600080fd5b60209290920196919550909350505050565b6000602082840312156104d357600080fd5b5035919050565b6000806000606084860312156104ef57600080fd5b8335925060208401359150610506604085016103de565b90509250925092565b821515815260006020604081840152835180604085015260005b8181101561054557858101830151858201606001528201610529565b81811115610557576000606083870101525b50601f01601f191692909201606001949350505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156105975761059761056e565b500190565b6000828210156105ae576105ae61056e565b500390565b634e487b7160e01b600052603260045260246000fd5b60006000198214156105dd576105dd61056e565b506001019056fea2646970667358221220d032503efc3de55867e102b281163ead37b35b7e437118bd933dd0c2d57e3ce264736f6c63430008090033",
  "bytecodeSha1": "7554f0b908f21b397069d4c8e84d7f8077f12e63",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "Counter",
  "coverageMap": {
    "branches": {
      "0": {
        "Counter.fundContract": {
          "11": [
            1466,
            1477,
            true
          ],
          "12": [
            1518,
            1539,
            true
          ]
        },
        "Counter.tokenIsAllowed": {
          "13": [
            1161,
            1203,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Counter.checkUpkeep": {
          "6": [
            1856,
            1915
          ],
          "7": [
            1925,
            1948
          ]
        },
        "Counter.fundContract": {
          "2": [
            1458,
            1500
          ],
          "3": [
            1510,
            1573
          ],
          "4": [
            1583,
            1627
          ],
          "5": [
            1637,
            1673
          ]
        },
        "Counter.performUpkeep": {
          "0": [
            2040,
            2071
          ],
          "1": [
            2081,
            2102
          ]
        },
        "Counter.tokenIsAllowed": {
          "8": [
            1223,
            1234
          ],
          "9": [
            1112,
            1132
          ],
          "10": [
            1268,
            1280
          ]
        }
      }
    }
  },
  "dependencies": [
    "KeeperCompatibleInterface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806361bc221a1161007157806361bc221a146101555780636c92a8001461015e5780636e04ff0d146101715780637bdb76b614610192578063947a36fb146101b2578063dd5b8467146101d957600080fd5b806329161a00146100ae5780633f3b3b27146100ec5780633f774675146100f55780634585e33b146101155780635e5f2e261461012a575b600080fd5b6100d96100bc3660046103fa565b600560209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6100d960015481565b6100d961010336600461042d565b60026020526000908152604090205481565b61012861012336600461044f565b6101fc565b005b61013d6101383660046104c1565b610215565b6040516001600160a01b0390911681526020016100e3565b6100d960005481565b61012861016c3660046104da565b61023f565b61018461017f36600461044f565b6102fd565b6040516100e392919061050f565b6100d96101a036600461042d565b60036020526000908152604090205481565b6100d97f000000000000000000000000000000000000000000000000000000000000000081565b6101ec6101e736600461042d565b610374565b60405190151581526020016100e3565b42600190815560005461020e91610584565b6000555050565b6004818154811061022557600080fd5b6000918252602090912001546001600160a01b0316905081565b600083116102895760405162461bcd60e51b81526020600482015260126024820152710616d6f756e742063616e6e6f7420626520360741b60448201526064015b60405180910390fd5b61029281610374565b6102de5760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e2063757272656e746c792069736e277420616c6c6f7765640000006044820152606401610280565b5033600090815260026020908152604080832093909355600390522055565b600060607f000000000000000000000000000000000000000000000000000000000000000060015442610330919061059c565b11915083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250949792965091945050505050565b6000805b6004548110156103d557826001600160a01b03166004828154811061039f5761039f6105b3565b6000918252602090912001546001600160a01b031614156103c35750600192915050565b806103cd816105c9565b915050610378565b50600092915050565b80356001600160a01b03811681146103f557600080fd5b919050565b6000806040838503121561040d57600080fd5b610416836103de565b9150610424602084016103de565b90509250929050565b60006020828403121561043f57600080fd5b610448826103de565b9392505050565b6000806020838503121561046257600080fd5b823567ffffffffffffffff8082111561047a57600080fd5b818501915085601f83011261048e57600080fd5b81358181111561049d57600080fd5b8660208285010111156104af57600080fd5b60209290920196919550909350505050565b6000602082840312156104d357600080fd5b5035919050565b6000806000606084860312156104ef57600080fd5b8335925060208401359150610506604085016103de565b90509250925092565b821515815260006020604081840152835180604085015260005b8181101561054557858101830151858201606001528201610529565b81811115610557576000606083870101525b50601f01601f191692909201606001949350505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156105975761059761056e565b500190565b6000828210156105ae576105ae61056e565b500390565b634e487b7160e01b600052603260045260246000fd5b60006000198214156105dd576105dd61056e565b506001019056fea2646970667358221220d032503efc3de55867e102b281163ead37b35b7e437118bd933dd0c2d57e3ce264736f6c63430008090033",
  "deployedSourceMap": "295:1903:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:69;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;603:25:1;;;591:2;576:18;702:69:0;;;;;;;;520:28;;;;;;554:51;;;;;;:::i;:::-;;;;;;;;;;;;;;1961:235;;;;;;:::i;:::-;;:::i;:::-;;666:30;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1775:32:1;;;1757:51;;1745:2;1730:18;666:30:0;1611:203:1;347:22:0;;;;;;1293:387;;;;;;:::i;:::-;;:::i;1686:269::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;611:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;481:33;;;;;924:363;;;;;;:::i;:::-;;:::i;:::-;;;2992:14:1;;2985:22;2967:41;;2955:2;2940:18;924:363:0;2827:187:1;1961:235:0;2056:15;2040:13;:31;;;2091:7;;:11;;;:::i;:::-;2081:7;:21;-1:-1:-1;;1961:235:0:o;666:30::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;666:30:0;;-1:-1:-1;666:30:0;:::o;1293:387::-;1476:1;1466:7;:11;1458:42;;;;-1:-1:-1;;;1458:42:0;;3486:2:1;1458:42:0;;;3468:21:1;3525:2;3505:18;;;3498:30;-1:-1:-1;;;3544:18:1;;;3537:48;3602:18;;1458:42:0;;;;;;;;;1518:21;1533:5;1518:14;:21::i;:::-;1510:63;;;;-1:-1:-1;;;1510:63:0;;3833:2:1;1510:63:0;;;3815:21:1;3872:2;3852:18;;;3845:30;3911:31;3891:18;;;3884:59;3960:18;;1510:63:0;3631:353:1;1510:63:0;-1:-1:-1;1600:10:0;1583:28;;;;:16;:28;;;;;;;;:44;;;;1637:14;:26;;;:36;1293:387::o;1686:269::-;1797:17;1816:24;1907:8;1890:13;;1872:15;:31;;;;:::i;:::-;1871:44;1856:59;;1939:9;;1925:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1686:269:0;;1925:23;;-1:-1:-1;1686:269:0;;-1:-1:-1;;;;;1686:269:0:o;924:363::-;979:4;;995:264;1078:13;:20;1057:41;;995:264;;;1198:5;-1:-1:-1;;;;;1161:42:0;:13;1175:18;1161:33;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1161:33:0;:42;1157:92;;;-1:-1:-1;1230:4:0;;924:363;-1:-1:-1;;924:363:0:o;1157:92::-;1112:20;;;;:::i;:::-;;;;995:264;;;-1:-1:-1;1275:5:0;;924:363;-1:-1:-1;;924:363:0:o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;639:186::-;698:6;751:2;739:9;730:7;726:23;722:32;719:52;;;767:1;764;757:12;719:52;790:29;809:9;790:29;:::i;:::-;780:39;639:186;-1:-1:-1;;;639:186:1:o;830:591::-;900:6;908;961:2;949:9;940:7;936:23;932:32;929:52;;;977:1;974;967:12;929:52;1017:9;1004:23;1046:18;1087:2;1079:6;1076:14;1073:34;;;1103:1;1100;1093:12;1073:34;1141:6;1130:9;1126:22;1116:32;;1186:7;1179:4;1175:2;1171:13;1167:27;1157:55;;1208:1;1205;1198:12;1157:55;1248:2;1235:16;1274:2;1266:6;1263:14;1260:34;;;1290:1;1287;1280:12;1260:34;1335:7;1330:2;1321:6;1317:2;1313:15;1309:24;1306:37;1303:57;;;1356:1;1353;1346:12;1303:57;1387:2;1379:11;;;;;1409:6;;-1:-1:-1;830:591:1;;-1:-1:-1;;;;830:591:1:o;1426:180::-;1485:6;1538:2;1526:9;1517:7;1513:23;1509:32;1506:52;;;1554:1;1551;1544:12;1506:52;-1:-1:-1;1577:23:1;;1426:180;-1:-1:-1;1426:180:1:o;1819:322::-;1896:6;1904;1912;1965:2;1953:9;1944:7;1940:23;1936:32;1933:52;;;1981:1;1978;1971:12;1933:52;2017:9;2004:23;1994:33;;2074:2;2063:9;2059:18;2046:32;2036:42;;2097:38;2131:2;2120:9;2116:18;2097:38;:::i;:::-;2087:48;;1819:322;;;;;:::o;2146:676::-;2329:6;2322:14;2315:22;2304:9;2297:41;2278:4;2357:2;2395;2390;2379:9;2375:18;2368:30;2427:6;2421:13;2470:6;2465:2;2454:9;2450:18;2443:34;2495:1;2505:140;2519:6;2516:1;2513:13;2505:140;;;2614:14;;;2610:23;;2604:30;2580:17;;;2599:2;2576:26;2569:66;2534:10;;2505:140;;;2663:6;2660:1;2657:13;2654:91;;;2733:1;2728:2;2719:6;2708:9;2704:22;2700:31;2693:42;2654:91;-1:-1:-1;2806:2:1;2785:15;-1:-1:-1;;2781:29:1;2766:45;;;;2813:2;2762:54;;2146:676;-1:-1:-1;;;;2146:676:1:o;3019:127::-;3080:10;3075:3;3071:20;3068:1;3061:31;3111:4;3108:1;3101:15;3135:4;3132:1;3125:15;3151:128;3191:3;3222:1;3218:6;3215:1;3212:13;3209:39;;;3228:18;;:::i;:::-;-1:-1:-1;3264:9:1;;3151:128::o;3989:125::-;4029:4;4057:1;4054;4051:8;4048:34;;;4062:18;;:::i;:::-;-1:-1:-1;4099:9:1;;3989:125::o;4119:127::-;4180:10;4175:3;4171:20;4168:1;4161:31;4211:4;4208:1;4201:15;4235:4;4232:1;4225:15;4251:135;4290:3;-1:-1:-1;;4311:17:1;;4308:43;;;4331:18;;:::i;:::-;-1:-1:-1;4378:1:1;4367:13;;4251:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    295,
    2198
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61BC221A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x6C92A800 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x7BDB76B6 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29161A00 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x3F774675 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0x12A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x44F JUMP JUMPDEST PUSH2 0x1FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xD9 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x4DA JUMP JUMPDEST PUSH2 0x23F JUMP JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x44F JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP3 SWAP2 SWAP1 PUSH2 0x50F JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1EC PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x42D JUMP JUMPDEST PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST TIMESTAMP PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x0 SLOAD PUSH2 0x20E SWAP2 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x0 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x616D6F756E742063616E6E6F74206265203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x374 JUMP JUMPDEST PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E2063757272656E746C792069736E277420616C6C6F776564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x280 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SWAP1 MSTORE KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x59C JUMP JUMPDEST GT SWAP2 POP DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP5 SWAP8 SWAP3 SWAP7 POP SWAP2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x3D5 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x39F JUMPI PUSH2 0x39F PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3C3 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x3CD DUP2 PUSH2 0x5C9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x378 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x416 DUP4 PUSH2 0x3DE JUMP JUMPDEST SWAP2 POP PUSH2 0x424 PUSH1 0x20 DUP5 ADD PUSH2 0x3DE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x448 DUP3 PUSH2 0x3DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x506 PUSH1 0x40 DUP6 ADD PUSH2 0x3DE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x545 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0x529 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 PUSH1 0x60 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x60 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x597 JUMPI PUSH2 0x597 PUSH2 0x56E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5AE JUMPI PUSH2 0x5AE PUSH2 0x56E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x5DD JUMPI PUSH2 0x5DD PUSH2 0x56E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 ORIGIN POP RETURNDATACOPY 0xFC RETURNDATASIZE 0xE5 PC PUSH8 0xE102B281163EAD37 0xB3 JUMPDEST PUSH31 0x437118BD933DD0C2D57E3CE264736F6C634300080900330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        295,
        2198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x61BC221A"
    },
    "38": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x61BC221A"
    },
    "49": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x155"
    },
    "53": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6C92A800"
    },
    "60": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15E"
    },
    "64": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6E04FF0D"
    },
    "71": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x171"
    },
    "75": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7BDB76B6"
    },
    "82": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x192"
    },
    "86": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x947A36FB"
    },
    "93": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2"
    },
    "97": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD5B8467"
    },
    "104": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D9"
    },
    "108": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "REVERT",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x29161A00"
    },
    "120": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3F3B3B27"
    },
    "131": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC"
    },
    "135": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3F774675"
    },
    "142": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "146": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4585E33B"
    },
    "153": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "157": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5E5F2E26"
    },
    "164": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A"
    },
    "168": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        295,
        2198
      ],
      "op": "REVERT",
      "path": "0"
    },
    "174": {
      "offset": [
        702,
        771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "178": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC"
    },
    "181": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "182": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "184": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FA"
    },
    "187": {
      "fn": null,
      "jump": "i",
      "offset": [
        702,
        771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "188": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "191": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "193": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "DUP2",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "198": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "DUP4",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "203": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "204": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "DUP5",
      "path": "0"
    },
    "205": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "209": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "DUP3",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "215": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "DUP2",
      "path": "0"
    },
    "216": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "217": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "220": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "221": {
      "op": "SWAP1"
    },
    "222": {
      "op": "DUP2"
    },
    "223": {
      "op": "MSTORE"
    },
    "224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "226": {
      "op": "ADD"
    },
    "227": {
      "offset": [
        702,
        771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "228": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "230": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "231": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "232": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "233": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "SUB",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        702,
        771
      ],
      "op": "RETURN",
      "path": "0"
    },
    "236": {
      "offset": [
        520,
        548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "237": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "240": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "242": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "243": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "DUP2",
      "path": "0"
    },
    "244": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "245": {
      "offset": [
        554,
        605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "246": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "249": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "252": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "253": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "255": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42D"
    },
    "258": {
      "fn": null,
      "jump": "i",
      "offset": [
        554,
        605
      ],
      "op": "JUMP",
      "path": "0"
    },
    "259": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "260": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "262": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "264": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "265": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "267": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "268": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "269": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "270": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "272": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "273": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "275": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "276": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "JUMP",
      "path": "0"
    },
    "277": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1961,
        2196
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "278": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1961,
        2196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x128"
    },
    "281": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1961,
        2196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x123"
    },
    "284": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1961,
        2196
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "285": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1961,
        2196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "287": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1961,
        2196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44F"
    },
    "290": {
      "fn": "Counter.performUpkeep",
      "jump": "i",
      "offset": [
        1961,
        2196
      ],
      "op": "JUMP",
      "path": "0"
    },
    "291": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1961,
        2196
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "292": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1961,
        2196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC"
    },
    "295": {
      "fn": "Counter.performUpkeep",
      "jump": "i",
      "offset": [
        1961,
        2196
      ],
      "op": "JUMP",
      "path": "0"
    },
    "296": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1961,
        2196
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "297": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1961,
        2196
      ],
      "op": "STOP",
      "path": "0"
    },
    "298": {
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "299": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D"
    },
    "302": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x138"
    },
    "305": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "306": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "308": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C1"
    },
    "311": {
      "fn": "Counter.performUpkeep",
      "jump": "i",
      "offset": [
        666,
        696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "312": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "313": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215"
    },
    "316": {
      "fn": "Counter.performUpkeep",
      "jump": "i",
      "offset": [
        666,
        696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "317": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "318": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "320": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "327": {
      "op": "SHL"
    },
    "328": {
      "op": "SUB"
    },
    "329": {
      "op": "SWAP1"
    },
    "330": {
      "op": "SWAP2"
    },
    "331": {
      "op": "AND"
    },
    "332": {
      "op": "DUP2"
    },
    "333": {
      "op": "MSTORE"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "336": {
      "op": "ADD"
    },
    "337": {
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3"
    },
    "340": {
      "op": "JUMP"
    },
    "341": {
      "offset": [
        347,
        369
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "342": {
      "fn": "Counter.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "345": {
      "fn": "Counter.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "347": {
      "fn": "Counter.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "348": {
      "fn": "Counter.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "DUP2",
      "path": "0"
    },
    "349": {
      "fn": "Counter.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "JUMP",
      "path": "0"
    },
    "350": {
      "fn": "Counter.fundContract",
      "offset": [
        1293,
        1680
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "351": {
      "fn": "Counter.fundContract",
      "offset": [
        1293,
        1680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x128"
    },
    "354": {
      "fn": "Counter.fundContract",
      "offset": [
        1293,
        1680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16C"
    },
    "357": {
      "fn": "Counter.fundContract",
      "offset": [
        1293,
        1680
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "358": {
      "fn": "Counter.fundContract",
      "offset": [
        1293,
        1680
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "360": {
      "fn": "Counter.fundContract",
      "offset": [
        1293,
        1680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DA"
    },
    "363": {
      "fn": "Counter.fundContract",
      "jump": "i",
      "offset": [
        1293,
        1680
      ],
      "op": "JUMP",
      "path": "0"
    },
    "364": {
      "fn": "Counter.fundContract",
      "offset": [
        1293,
        1680
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "365": {
      "fn": "Counter.fundContract",
      "offset": [
        1293,
        1680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23F"
    },
    "368": {
      "fn": "Counter.fundContract",
      "jump": "i",
      "offset": [
        1293,
        1680
      ],
      "op": "JUMP",
      "path": "0"
    },
    "369": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "370": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "373": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17F"
    },
    "376": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "377": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "379": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44F"
    },
    "382": {
      "fn": "Counter.checkUpkeep",
      "jump": "i",
      "offset": [
        1686,
        1955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "383": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "384": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD"
    },
    "387": {
      "fn": "Counter.checkUpkeep",
      "jump": "i",
      "offset": [
        1686,
        1955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "388": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "391": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "392": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3"
    },
    "395": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "396": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "397": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "398": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50F"
    },
    "401": {
      "fn": "Counter.checkUpkeep",
      "jump": "i",
      "offset": [
        1686,
        1955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "402": {
      "offset": [
        611,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "403": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "406": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "409": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "410": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "412": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42D"
    },
    "415": {
      "fn": "Counter.checkUpkeep",
      "jump": "i",
      "offset": [
        611,
        660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "416": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "417": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "419": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "421": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "422": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "424": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "425": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "426": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "427": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "429": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "430": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "431": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "432": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "433": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "434": {
      "offset": [
        481,
        514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "435": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        481,
        514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "438": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        481,
        514
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "471": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        481,
        514
      ],
      "op": "DUP2",
      "path": "0"
    },
    "472": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        481,
        514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "473": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "474": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "477": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "480": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "481": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "483": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42D"
    },
    "486": {
      "fn": "Counter.tokenIsAllowed",
      "jump": "i",
      "offset": [
        924,
        1287
      ],
      "op": "JUMP",
      "path": "0"
    },
    "487": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "488": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x374"
    },
    "491": {
      "fn": "Counter.tokenIsAllowed",
      "jump": "i",
      "offset": [
        924,
        1287
      ],
      "op": "JUMP",
      "path": "0"
    },
    "492": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "493": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "495": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "496": {
      "op": "SWAP1"
    },
    "497": {
      "op": "ISZERO"
    },
    "498": {
      "op": "ISZERO"
    },
    "499": {
      "op": "DUP2"
    },
    "500": {
      "op": "MSTORE"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "503": {
      "op": "ADD"
    },
    "504": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3"
    },
    "507": {
      "op": "JUMP"
    },
    "508": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1961,
        2196
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "509": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2056,
        2071
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 0
    },
    "510": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2040,
        2053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "512": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2040,
        2071
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "513": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2040,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "514": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2040,
        2071
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "515": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2091,
        2098
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "517": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2091,
        2098
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "518": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2091,
        2102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20E"
    },
    "521": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2091,
        2102
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "522": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2091,
        2102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x584"
    },
    "525": {
      "fn": "Counter.performUpkeep",
      "jump": "i",
      "offset": [
        2091,
        2102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "526": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2091,
        2102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "527": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2081,
        2088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "529": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2081,
        2102
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "530": {
      "op": "POP"
    },
    "531": {
      "op": "POP"
    },
    "532": {
      "fn": "Counter.performUpkeep",
      "jump": "o",
      "offset": [
        1961,
        2196
      ],
      "op": "JUMP",
      "path": "0"
    },
    "533": {
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "534": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "536": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "537": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "538": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "539": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "540": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "LT",
      "path": "0"
    },
    "541": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225"
    },
    "544": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "545": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "547": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "548": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "REVERT",
      "path": "0"
    },
    "549": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "550": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "552": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "553": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP3",
      "path": "0"
    },
    "554": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "555": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "557": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "558": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "559": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "560": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "ADD",
      "path": "0"
    },
    "561": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "568": {
      "op": "SHL"
    },
    "569": {
      "op": "SUB"
    },
    "570": {
      "offset": [
        666,
        696
      ],
      "op": "AND",
      "path": "0"
    },
    "571": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "572": {
      "op": "POP"
    },
    "573": {
      "offset": [
        666,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "574": {
      "fn": "Counter.performUpkeep",
      "jump": "o",
      "offset": [
        666,
        696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "575": {
      "fn": "Counter.fundContract",
      "offset": [
        1293,
        1680
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "576": {
      "fn": "Counter.fundContract",
      "offset": [
        1476,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "578": {
      "fn": "Counter.fundContract",
      "offset": [
        1466,
        1473
      ],
      "op": "DUP4",
      "path": "0"
    },
    "579": {
      "branch": 11,
      "fn": "Counter.fundContract",
      "offset": [
        1466,
        1477
      ],
      "op": "GT",
      "path": "0"
    },
    "580": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x289"
    },
    "583": {
      "branch": 11,
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "584": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "586": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "593": {
      "op": "SHL"
    },
    "594": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "DUP2",
      "path": "0"
    },
    "595": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "598": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "600": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "DUP3",
      "path": "0"
    },
    "601": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "ADD",
      "path": "0"
    },
    "602": {
      "op": "MSTORE"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "607": {
      "op": "DUP3"
    },
    "608": {
      "op": "ADD"
    },
    "609": {
      "op": "MSTORE"
    },
    "610": {
      "op": "PUSH18",
      "value": "0x616D6F756E742063616E6E6F74206265203"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "631": {
      "op": "SHL"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "634": {
      "op": "DUP3"
    },
    "635": {
      "op": "ADD"
    },
    "636": {
      "op": "MSTORE"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "639": {
      "op": "ADD"
    },
    "640": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "641": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "643": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "644": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "DUP1",
      "path": "0"
    },
    "645": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "646": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "SUB",
      "path": "0"
    },
    "647": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "648": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "649": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1500
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "650": {
      "fn": "Counter.fundContract",
      "offset": [
        1518,
        1539
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x292"
    },
    "653": {
      "fn": "Counter.fundContract",
      "offset": [
        1533,
        1538
      ],
      "op": "DUP2",
      "path": "0"
    },
    "654": {
      "fn": "Counter.fundContract",
      "offset": [
        1518,
        1532
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x374"
    },
    "657": {
      "fn": "Counter.fundContract",
      "jump": "i",
      "offset": [
        1518,
        1539
      ],
      "op": "JUMP",
      "path": "0"
    },
    "658": {
      "branch": 12,
      "fn": "Counter.fundContract",
      "offset": [
        1518,
        1539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "659": {
      "fn": "Counter.fundContract",
      "offset": [
        1510,
        1573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DE"
    },
    "662": {
      "branch": 12,
      "fn": "Counter.fundContract",
      "offset": [
        1510,
        1573
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "663": {
      "fn": "Counter.fundContract",
      "offset": [
        1510,
        1573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "665": {
      "fn": "Counter.fundContract",
      "offset": [
        1510,
        1573
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "666": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "670": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "672": {
      "op": "SHL"
    },
    "673": {
      "fn": "Counter.fundContract",
      "offset": [
        1510,
        1573
      ],
      "op": "DUP2",
      "path": "0"
    },
    "674": {
      "fn": "Counter.fundContract",
      "offset": [
        1510,
        1573
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "677": {
      "fn": "Counter.fundContract",
      "offset": [
        1510,
        1573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "679": {
      "fn": "Counter.fundContract",
      "offset": [
        1510,
        1573
      ],
      "op": "DUP3",
      "path": "0"
    },
    "680": {
      "fn": "Counter.fundContract",
      "offset": [
        1510,
        1573
      ],
      "op": "ADD",
      "path": "0"
    },
    "681": {
      "op": "MSTORE"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "686": {
      "op": "DUP3"
    },
    "687": {
      "op": "ADD"
    },
    "688": {
      "op": "MSTORE"
    },
    "689": {
      "op": "PUSH32",
      "value": "0x546F6B656E2063757272656E746C792069736E277420616C6C6F776564000000"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "724": {
      "op": "DUP3"
    },
    "725": {
      "op": "ADD"
    },
    "726": {
      "op": "MSTORE"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "729": {
      "op": "ADD"
    },
    "730": {
      "fn": "Counter.fundContract",
      "offset": [
        1510,
        1573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "733": {
      "op": "JUMP"
    },
    "734": {
      "fn": "Counter.fundContract",
      "offset": [
        1510,
        1573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "735": {
      "op": "POP"
    },
    "736": {
      "fn": "Counter.fundContract",
      "offset": [
        1600,
        1610
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 4
    },
    "737": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "739": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "740": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "741": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "742": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "744": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "746": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "747": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "748": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "749": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "751": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "752": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1611
      ],
      "op": "DUP4",
      "path": "0"
    },
    "753": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1611
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "754": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1627
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "755": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1627
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "756": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1627
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "757": {
      "fn": "Counter.fundContract",
      "offset": [
        1583,
        1627
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "758": {
      "fn": "Counter.fundContract",
      "offset": [
        1637,
        1651
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x3"
    },
    "760": {
      "fn": "Counter.fundContract",
      "offset": [
        1637,
        1663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "761": {
      "fn": "Counter.fundContract",
      "offset": [
        1637,
        1663
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "762": {
      "fn": "Counter.fundContract",
      "offset": [
        1637,
        1663
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "763": {
      "fn": "Counter.fundContract",
      "offset": [
        1637,
        1673
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "764": {
      "fn": "Counter.fundContract",
      "jump": "o",
      "offset": [
        1293,
        1680
      ],
      "op": "JUMP",
      "path": "0"
    },
    "765": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "766": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1797,
        1814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "768": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1816,
        1840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "770": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1907,
        1915
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "803": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1890,
        1903
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "805": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1890,
        1903
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "806": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1872,
        1887
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "807": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1872,
        1903
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "810": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1872,
        1903
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "811": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1872,
        1903
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "812": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1872,
        1903
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59C"
    },
    "815": {
      "fn": "Counter.checkUpkeep",
      "jump": "i",
      "offset": [
        1872,
        1903
      ],
      "op": "JUMP",
      "path": "0"
    },
    "816": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1872,
        1903
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "817": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1871,
        1915
      ],
      "op": "GT",
      "path": "0"
    },
    "818": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1856,
        1915
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "819": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1856,
        1915
      ],
      "op": "POP",
      "path": "0"
    },
    "820": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1939,
        1948
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 7
    },
    "821": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1939,
        1948
      ],
      "op": "DUP4",
      "path": "0"
    },
    "822": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "823": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "824": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "826": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "ADD",
      "path": "0"
    },
    "827": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "829": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "830": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "831": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "DIV",
      "path": "0"
    },
    "832": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "MUL",
      "path": "0"
    },
    "833": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "835": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "ADD",
      "path": "0"
    },
    "836": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "838": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "839": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "840": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "DUP2",
      "path": "0"
    },
    "841": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "ADD",
      "path": "0"
    },
    "842": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "844": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "845": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "846": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "847": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "848": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "849": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "850": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "DUP2",
      "path": "0"
    },
    "851": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "DUP2",
      "path": "0"
    },
    "852": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "853": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "855": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "ADD",
      "path": "0"
    },
    "856": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "DUP4",
      "path": "0"
    },
    "857": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "DUP4",
      "path": "0"
    },
    "858": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "859": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "DUP3",
      "path": "0"
    },
    "860": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "DUP5",
      "path": "0"
    },
    "861": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "862": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "864": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "865": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "ADD",
      "path": "0"
    },
    "866": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "867": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "868": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "869": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "870": {
      "op": "POP"
    },
    "871": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "872": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "873": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "874": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1925,
        1948
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "875": {
      "op": "POP"
    },
    "876": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "877": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1686,
        1955
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "878": {
      "op": "POP"
    },
    "879": {
      "op": "POP"
    },
    "880": {
      "op": "POP"
    },
    "881": {
      "op": "POP"
    },
    "882": {
      "op": "POP"
    },
    "883": {
      "fn": "Counter.checkUpkeep",
      "jump": "o",
      "offset": [
        1686,
        1955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "884": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "885": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        979,
        983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "887": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        979,
        983
      ],
      "op": "DUP1",
      "path": "0"
    },
    "888": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        995,
        1259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "889": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1078,
        1091
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "891": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1078,
        1098
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "892": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1057,
        1098
      ],
      "op": "DUP2",
      "path": "0"
    },
    "893": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1057,
        1098
      ],
      "op": "LT",
      "path": "0"
    },
    "894": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        995,
        1259
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "895": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        995,
        1259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D5"
    },
    "898": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        995,
        1259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "899": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1198,
        1203
      ],
      "op": "DUP3",
      "path": "0"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "906": {
      "op": "SHL"
    },
    "907": {
      "op": "SUB"
    },
    "908": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1203
      ],
      "op": "AND",
      "path": "0"
    },
    "909": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1174
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "911": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1175,
        1193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "912": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "913": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "914": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "915": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "LT",
      "path": "0"
    },
    "916": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39F"
    },
    "919": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "920": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39F"
    },
    "923": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B3"
    },
    "926": {
      "fn": "Counter.tokenIsAllowed",
      "jump": "i",
      "offset": [
        1161,
        1194
      ],
      "op": "JUMP",
      "path": "0"
    },
    "927": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "928": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "930": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "931": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "DUP3",
      "path": "0"
    },
    "932": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "933": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "935": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "936": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "937": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "938": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "ADD",
      "path": "0"
    },
    "939": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "946": {
      "op": "SHL"
    },
    "947": {
      "op": "SUB"
    },
    "948": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1194
      ],
      "op": "AND",
      "path": "0"
    },
    "949": {
      "branch": 13,
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1161,
        1203
      ],
      "op": "EQ",
      "path": "0"
    },
    "950": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1157,
        1249
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "951": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1157,
        1249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C3"
    },
    "954": {
      "branch": 13,
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1157,
        1249
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "955": {
      "op": "POP"
    },
    "956": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1230,
        1234
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x1"
    },
    "958": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1230,
        1234
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "959": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "op": "POP"
    },
    "962": {
      "fn": "Counter.tokenIsAllowed",
      "jump": "o",
      "offset": [
        924,
        1287
      ],
      "op": "JUMP",
      "path": "0"
    },
    "963": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1157,
        1249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "964": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1112,
        1132
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 9
    },
    "965": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1112,
        1132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CD"
    },
    "968": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1112,
        1132
      ],
      "op": "DUP2",
      "path": "0"
    },
    "969": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1112,
        1132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C9"
    },
    "972": {
      "fn": "Counter.tokenIsAllowed",
      "jump": "i",
      "offset": [
        1112,
        1132
      ],
      "op": "JUMP",
      "path": "0"
    },
    "973": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1112,
        1132
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "974": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1112,
        1132
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "975": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1112,
        1132
      ],
      "op": "POP",
      "path": "0"
    },
    "976": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1112,
        1132
      ],
      "op": "POP",
      "path": "0"
    },
    "977": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        995,
        1259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "980": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        995,
        1259
      ],
      "op": "JUMP",
      "path": "0"
    },
    "981": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        995,
        1259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "982": {
      "op": "POP"
    },
    "983": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1275,
        1280
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "985": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1275,
        1280
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "986": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        924,
        1287
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "987": {
      "op": "POP"
    },
    "988": {
      "op": "POP"
    },
    "989": {
      "fn": "Counter.tokenIsAllowed",
      "jump": "o",
      "offset": [
        924,
        1287
      ],
      "op": "JUMP",
      "path": "0"
    },
    "990": {
      "op": "JUMPDEST"
    },
    "991": {
      "op": "DUP1"
    },
    "992": {
      "op": "CALLDATALOAD"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "op": "SUB"
    },
    "1001": {
      "op": "DUP2"
    },
    "1002": {
      "op": "AND"
    },
    "1003": {
      "op": "DUP2"
    },
    "1004": {
      "op": "EQ"
    },
    "1005": {
      "op": "PUSH2",
      "value": "0x3F5"
    },
    "1008": {
      "op": "JUMPI"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1011": {
      "op": "DUP1"
    },
    "1012": {
      "op": "REVERT"
    },
    "1013": {
      "op": "JUMPDEST"
    },
    "1014": {
      "op": "SWAP2"
    },
    "1015": {
      "op": "SWAP1"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "jump": "o",
      "op": "JUMP"
    },
    "1018": {
      "op": "JUMPDEST"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1021": {
      "op": "DUP1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1024": {
      "op": "DUP4"
    },
    "1025": {
      "op": "DUP6"
    },
    "1026": {
      "op": "SUB"
    },
    "1027": {
      "op": "SLT"
    },
    "1028": {
      "op": "ISZERO"
    },
    "1029": {
      "op": "PUSH2",
      "value": "0x40D"
    },
    "1032": {
      "op": "JUMPI"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1035": {
      "op": "DUP1"
    },
    "1036": {
      "op": "REVERT"
    },
    "1037": {
      "op": "JUMPDEST"
    },
    "1038": {
      "op": "PUSH2",
      "value": "0x416"
    },
    "1041": {
      "op": "DUP4"
    },
    "1042": {
      "op": "PUSH2",
      "value": "0x3DE"
    },
    "1045": {
      "jump": "i",
      "op": "JUMP"
    },
    "1046": {
      "op": "JUMPDEST"
    },
    "1047": {
      "op": "SWAP2"
    },
    "1048": {
      "op": "POP"
    },
    "1049": {
      "op": "PUSH2",
      "value": "0x424"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1054": {
      "op": "DUP5"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "op": "PUSH2",
      "value": "0x3DE"
    },
    "1059": {
      "jump": "i",
      "op": "JUMP"
    },
    "1060": {
      "op": "JUMPDEST"
    },
    "1061": {
      "op": "SWAP1"
    },
    "1062": {
      "op": "POP"
    },
    "1063": {
      "op": "SWAP3"
    },
    "1064": {
      "op": "POP"
    },
    "1065": {
      "op": "SWAP3"
    },
    "1066": {
      "op": "SWAP1"
    },
    "1067": {
      "op": "POP"
    },
    "1068": {
      "jump": "o",
      "op": "JUMP"
    },
    "1069": {
      "op": "JUMPDEST"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1074": {
      "op": "DUP3"
    },
    "1075": {
      "op": "DUP5"
    },
    "1076": {
      "op": "SUB"
    },
    "1077": {
      "op": "SLT"
    },
    "1078": {
      "op": "ISZERO"
    },
    "1079": {
      "op": "PUSH2",
      "value": "0x43F"
    },
    "1082": {
      "op": "JUMPI"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1085": {
      "op": "DUP1"
    },
    "1086": {
      "op": "REVERT"
    },
    "1087": {
      "op": "JUMPDEST"
    },
    "1088": {
      "op": "PUSH2",
      "value": "0x448"
    },
    "1091": {
      "op": "DUP3"
    },
    "1092": {
      "op": "PUSH2",
      "value": "0x3DE"
    },
    "1095": {
      "jump": "i",
      "op": "JUMP"
    },
    "1096": {
      "op": "JUMPDEST"
    },
    "1097": {
      "op": "SWAP4"
    },
    "1098": {
      "op": "SWAP3"
    },
    "1099": {
      "op": "POP"
    },
    "1100": {
      "op": "POP"
    },
    "1101": {
      "op": "POP"
    },
    "1102": {
      "jump": "o",
      "op": "JUMP"
    },
    "1103": {
      "op": "JUMPDEST"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1106": {
      "op": "DUP1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1109": {
      "op": "DUP4"
    },
    "1110": {
      "op": "DUP6"
    },
    "1111": {
      "op": "SUB"
    },
    "1112": {
      "op": "SLT"
    },
    "1113": {
      "op": "ISZERO"
    },
    "1114": {
      "op": "PUSH2",
      "value": "0x462"
    },
    "1117": {
      "op": "JUMPI"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1120": {
      "op": "DUP1"
    },
    "1121": {
      "op": "REVERT"
    },
    "1122": {
      "op": "JUMPDEST"
    },
    "1123": {
      "op": "DUP3"
    },
    "1124": {
      "op": "CALLDATALOAD"
    },
    "1125": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1134": {
      "op": "DUP1"
    },
    "1135": {
      "op": "DUP3"
    },
    "1136": {
      "op": "GT"
    },
    "1137": {
      "op": "ISZERO"
    },
    "1138": {
      "op": "PUSH2",
      "value": "0x47A"
    },
    "1141": {
      "op": "JUMPI"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1144": {
      "op": "DUP1"
    },
    "1145": {
      "op": "REVERT"
    },
    "1146": {
      "op": "JUMPDEST"
    },
    "1147": {
      "op": "DUP2"
    },
    "1148": {
      "op": "DUP6"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "SWAP2"
    },
    "1151": {
      "op": "POP"
    },
    "1152": {
      "op": "DUP6"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1155": {
      "op": "DUP4"
    },
    "1156": {
      "op": "ADD"
    },
    "1157": {
      "op": "SLT"
    },
    "1158": {
      "op": "PUSH2",
      "value": "0x48E"
    },
    "1161": {
      "op": "JUMPI"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1164": {
      "op": "DUP1"
    },
    "1165": {
      "op": "REVERT"
    },
    "1166": {
      "op": "JUMPDEST"
    },
    "1167": {
      "op": "DUP2"
    },
    "1168": {
      "op": "CALLDATALOAD"
    },
    "1169": {
      "op": "DUP2"
    },
    "1170": {
      "op": "DUP2"
    },
    "1171": {
      "op": "GT"
    },
    "1172": {
      "op": "ISZERO"
    },
    "1173": {
      "op": "PUSH2",
      "value": "0x49D"
    },
    "1176": {
      "op": "JUMPI"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1179": {
      "op": "DUP1"
    },
    "1180": {
      "op": "REVERT"
    },
    "1181": {
      "op": "JUMPDEST"
    },
    "1182": {
      "op": "DUP7"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1185": {
      "op": "DUP3"
    },
    "1186": {
      "op": "DUP6"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "GT"
    },
    "1190": {
      "op": "ISZERO"
    },
    "1191": {
      "op": "PUSH2",
      "value": "0x4AF"
    },
    "1194": {
      "op": "JUMPI"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1197": {
      "op": "DUP1"
    },
    "1198": {
      "op": "REVERT"
    },
    "1199": {
      "op": "JUMPDEST"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1202": {
      "op": "SWAP3"
    },
    "1203": {
      "op": "SWAP1"
    },
    "1204": {
      "op": "SWAP3"
    },
    "1205": {
      "op": "ADD"
    },
    "1206": {
      "op": "SWAP7"
    },
    "1207": {
      "op": "SWAP2"
    },
    "1208": {
      "op": "SWAP6"
    },
    "1209": {
      "op": "POP"
    },
    "1210": {
      "op": "SWAP1"
    },
    "1211": {
      "op": "SWAP4"
    },
    "1212": {
      "op": "POP"
    },
    "1213": {
      "op": "POP"
    },
    "1214": {
      "op": "POP"
    },
    "1215": {
      "op": "POP"
    },
    "1216": {
      "jump": "o",
      "op": "JUMP"
    },
    "1217": {
      "op": "JUMPDEST"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1222": {
      "op": "DUP3"
    },
    "1223": {
      "op": "DUP5"
    },
    "1224": {
      "op": "SUB"
    },
    "1225": {
      "op": "SLT"
    },
    "1226": {
      "op": "ISZERO"
    },
    "1227": {
      "op": "PUSH2",
      "value": "0x4D3"
    },
    "1230": {
      "op": "JUMPI"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1233": {
      "op": "DUP1"
    },
    "1234": {
      "op": "REVERT"
    },
    "1235": {
      "op": "JUMPDEST"
    },
    "1236": {
      "op": "POP"
    },
    "1237": {
      "op": "CALLDATALOAD"
    },
    "1238": {
      "op": "SWAP2"
    },
    "1239": {
      "op": "SWAP1"
    },
    "1240": {
      "op": "POP"
    },
    "1241": {
      "jump": "o",
      "op": "JUMP"
    },
    "1242": {
      "op": "JUMPDEST"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1245": {
      "op": "DUP1"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1250": {
      "op": "DUP5"
    },
    "1251": {
      "op": "DUP7"
    },
    "1252": {
      "op": "SUB"
    },
    "1253": {
      "op": "SLT"
    },
    "1254": {
      "op": "ISZERO"
    },
    "1255": {
      "op": "PUSH2",
      "value": "0x4EF"
    },
    "1258": {
      "op": "JUMPI"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1261": {
      "op": "DUP1"
    },
    "1262": {
      "op": "REVERT"
    },
    "1263": {
      "op": "JUMPDEST"
    },
    "1264": {
      "op": "DUP4"
    },
    "1265": {
      "op": "CALLDATALOAD"
    },
    "1266": {
      "op": "SWAP3"
    },
    "1267": {
      "op": "POP"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1270": {
      "op": "DUP5"
    },
    "1271": {
      "op": "ADD"
    },
    "1272": {
      "op": "CALLDATALOAD"
    },
    "1273": {
      "op": "SWAP2"
    },
    "1274": {
      "op": "POP"
    },
    "1275": {
      "op": "PUSH2",
      "value": "0x506"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1280": {
      "op": "DUP6"
    },
    "1281": {
      "op": "ADD"
    },
    "1282": {
      "op": "PUSH2",
      "value": "0x3DE"
    },
    "1285": {
      "jump": "i",
      "op": "JUMP"
    },
    "1286": {
      "op": "JUMPDEST"
    },
    "1287": {
      "op": "SWAP1"
    },
    "1288": {
      "op": "POP"
    },
    "1289": {
      "op": "SWAP3"
    },
    "1290": {
      "op": "POP"
    },
    "1291": {
      "op": "SWAP3"
    },
    "1292": {
      "op": "POP"
    },
    "1293": {
      "op": "SWAP3"
    },
    "1294": {
      "jump": "o",
      "op": "JUMP"
    },
    "1295": {
      "op": "JUMPDEST"
    },
    "1296": {
      "op": "DUP3"
    },
    "1297": {
      "op": "ISZERO"
    },
    "1298": {
      "op": "ISZERO"
    },
    "1299": {
      "op": "DUP2"
    },
    "1300": {
      "op": "MSTORE"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1307": {
      "op": "DUP2"
    },
    "1308": {
      "op": "DUP5"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "op": "MSTORE"
    },
    "1311": {
      "op": "DUP4"
    },
    "1312": {
      "op": "MLOAD"
    },
    "1313": {
      "op": "DUP1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1316": {
      "op": "DUP6"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "MSTORE"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1321": {
      "op": "JUMPDEST"
    },
    "1322": {
      "op": "DUP2"
    },
    "1323": {
      "op": "DUP2"
    },
    "1324": {
      "op": "LT"
    },
    "1325": {
      "op": "ISZERO"
    },
    "1326": {
      "op": "PUSH2",
      "value": "0x545"
    },
    "1329": {
      "op": "JUMPI"
    },
    "1330": {
      "op": "DUP6"
    },
    "1331": {
      "op": "DUP2"
    },
    "1332": {
      "op": "ADD"
    },
    "1333": {
      "op": "DUP4"
    },
    "1334": {
      "op": "ADD"
    },
    "1335": {
      "op": "MLOAD"
    },
    "1336": {
      "op": "DUP6"
    },
    "1337": {
      "op": "DUP3"
    },
    "1338": {
      "op": "ADD"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1341": {
      "op": "ADD"
    },
    "1342": {
      "op": "MSTORE"
    },
    "1343": {
      "op": "DUP3"
    },
    "1344": {
      "op": "ADD"
    },
    "1345": {
      "op": "PUSH2",
      "value": "0x529"
    },
    "1348": {
      "op": "JUMP"
    },
    "1349": {
      "op": "JUMPDEST"
    },
    "1350": {
      "op": "DUP2"
    },
    "1351": {
      "op": "DUP2"
    },
    "1352": {
      "op": "GT"
    },
    "1353": {
      "op": "ISZERO"
    },
    "1354": {
      "op": "PUSH2",
      "value": "0x557"
    },
    "1357": {
      "op": "JUMPI"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1362": {
      "op": "DUP4"
    },
    "1363": {
      "op": "DUP8"
    },
    "1364": {
      "op": "ADD"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "op": "MSTORE"
    },
    "1367": {
      "op": "JUMPDEST"
    },
    "1368": {
      "op": "POP"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1371": {
      "op": "ADD"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1374": {
      "op": "NOT"
    },
    "1375": {
      "op": "AND"
    },
    "1376": {
      "op": "SWAP3"
    },
    "1377": {
      "op": "SWAP1"
    },
    "1378": {
      "op": "SWAP3"
    },
    "1379": {
      "op": "ADD"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1382": {
      "op": "ADD"
    },
    "1383": {
      "op": "SWAP5"
    },
    "1384": {
      "op": "SWAP4"
    },
    "1385": {
      "op": "POP"
    },
    "1386": {
      "op": "POP"
    },
    "1387": {
      "op": "POP"
    },
    "1388": {
      "op": "POP"
    },
    "1389": {
      "jump": "o",
      "op": "JUMP"
    },
    "1390": {
      "op": "JUMPDEST"
    },
    "1391": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1398": {
      "op": "SHL"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1401": {
      "op": "MSTORE"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1406": {
      "op": "MSTORE"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1411": {
      "op": "REVERT"
    },
    "1412": {
      "op": "JUMPDEST"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1415": {
      "op": "DUP3"
    },
    "1416": {
      "op": "NOT"
    },
    "1417": {
      "op": "DUP3"
    },
    "1418": {
      "op": "GT"
    },
    "1419": {
      "op": "ISZERO"
    },
    "1420": {
      "op": "PUSH2",
      "value": "0x597"
    },
    "1423": {
      "op": "JUMPI"
    },
    "1424": {
      "op": "PUSH2",
      "value": "0x597"
    },
    "1427": {
      "op": "PUSH2",
      "value": "0x56E"
    },
    "1430": {
      "jump": "i",
      "op": "JUMP"
    },
    "1431": {
      "op": "JUMPDEST"
    },
    "1432": {
      "op": "POP"
    },
    "1433": {
      "op": "ADD"
    },
    "1434": {
      "op": "SWAP1"
    },
    "1435": {
      "jump": "o",
      "op": "JUMP"
    },
    "1436": {
      "op": "JUMPDEST"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1439": {
      "op": "DUP3"
    },
    "1440": {
      "op": "DUP3"
    },
    "1441": {
      "op": "LT"
    },
    "1442": {
      "op": "ISZERO"
    },
    "1443": {
      "op": "PUSH2",
      "value": "0x5AE"
    },
    "1446": {
      "op": "JUMPI"
    },
    "1447": {
      "op": "PUSH2",
      "value": "0x5AE"
    },
    "1450": {
      "op": "PUSH2",
      "value": "0x56E"
    },
    "1453": {
      "jump": "i",
      "op": "JUMP"
    },
    "1454": {
      "op": "JUMPDEST"
    },
    "1455": {
      "op": "POP"
    },
    "1456": {
      "op": "SUB"
    },
    "1457": {
      "op": "SWAP1"
    },
    "1458": {
      "jump": "o",
      "op": "JUMP"
    },
    "1459": {
      "op": "JUMPDEST"
    },
    "1460": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1467": {
      "op": "SHL"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1470": {
      "op": "MSTORE"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1475": {
      "op": "MSTORE"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1480": {
      "op": "REVERT"
    },
    "1481": {
      "op": "JUMPDEST"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1486": {
      "op": "NOT"
    },
    "1487": {
      "op": "DUP3"
    },
    "1488": {
      "op": "EQ"
    },
    "1489": {
      "op": "ISZERO"
    },
    "1490": {
      "op": "PUSH2",
      "value": "0x5DD"
    },
    "1493": {
      "op": "JUMPI"
    },
    "1494": {
      "op": "PUSH2",
      "value": "0x5DD"
    },
    "1497": {
      "op": "PUSH2",
      "value": "0x56E"
    },
    "1500": {
      "jump": "i",
      "op": "JUMP"
    },
    "1501": {
      "op": "JUMPDEST"
    },
    "1502": {
      "op": "POP"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "SWAP1"
    },
    "1507": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ee89e28e5dc69b7ba603c93b2e7e5a323f2c04da",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface KeeperCompatibleInterface {\n    function checkUpkeep(bytes calldata checkData)\n        external\n        returns (bool upkeepNeeded, bytes memory performData);\n\n    function performUpkeep(bytes calldata performData) external;\n}\n\ncontract Counter is KeeperCompatibleInterface {\n    uint256 public counter; // Public counter variable\n\n    // Use an interval in seconds and a timestamp to slow execution of Upkeep\n    uint256 public immutable interval;\n    uint256 public lastTimeStamp;\n    mapping(address => uint256) public user_to_interval;\n    mapping(address => uint256) public user_to_amount;\n    address[] public allowedTokens;\n    mapping(address => mapping(address => uint256)) public stakingBalance;\n\n    constructor(uint256 updateInterval) {\n        interval = updateInterval;\n        lastTimeStamp = block.timestamp;\n        counter = 0;\n    }\n\n    function tokenIsAllowed(address token) public returns (bool) {\n        for (\n            uint256 allowedTokensIndex = 0;\n            allowedTokensIndex < allowedTokens.length;\n            allowedTokensIndex++\n        ) {\n            if (allowedTokens[allowedTokensIndex] == token) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function fundContract(\n        uint256 _amount,\n        uint256 _dca_interval,\n        address token\n    ) public {\n        // Require amount greater than 0\n        require(_amount > 0, \"amount cannot be 0\");\n        require(tokenIsAllowed(token), \"Token currently isn't allowed\");\n        user_to_interval[msg.sender] = _dca_interval;\n        user_to_amount[msg.sender] = _amount;\n    }\n\n    function checkUpkeep(bytes calldata checkData)\n        external\n        view\n        override\n        returns (bool upkeepNeeded, bytes memory performData)\n    {\n        upkeepNeeded = (block.timestamp - lastTimeStamp) > interval;\n        performData = checkData;\n    }\n\n    function performUpkeep(bytes calldata performData) external override {\n        lastTimeStamp = block.timestamp;\n        counter = counter + 1;\n        performData;\n        // do stuff with user -> interval and user -> amount here\n    }\n}\n",
  "sourceMap": "295:1903:0:-:0;;;778:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;824:25;;875:15;859:13;:31;910:1;900:11;;295:1903;;14:184:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:1;;14:184;-1:-1:-1;14:184:1:o;:::-;295:1903:0;;;;;;;;;;",
  "sourcePath": "contracts/Counter.sol",
  "type": "contract"
}