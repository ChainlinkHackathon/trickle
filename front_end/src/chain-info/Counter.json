{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "updateInterval",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "checkData",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dca_interval",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "fundContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "interval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "tokenIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "user_to_amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "user_to_interval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Counter.sol"
  },
  "ast": {
    "absolutePath": "contracts/Counter.sol",
    "exportedSymbols": {
      "Counter": [
        170
      ],
      "KeeperCompatibleInterface": [
        16
      ]
    },
    "id": 171,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "KeeperCompatibleInterface",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 16,
        "linearizedBaseContracts": [
          16
        ],
        "name": "KeeperCompatibleInterface",
        "nameLocation": "67:25:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "6e04ff0d",
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "108:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nameLocation": "135:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "120:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "120:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "119:26:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "185:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "180:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "212:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "199:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "179:45:0"
            },
            "scope": 16,
            "src": "99:126:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "4585e33b",
            "id": 15,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "240:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "269:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "254:26:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "253:28:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:0:0"
            },
            "scope": 16,
            "src": "231:60:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 171,
        "src": "57:236:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17,
              "name": "KeeperCompatibleInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16,
              "src": "315:25:0"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "315:25:0"
          }
        ],
        "canonicalName": "Counter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 170,
        "linearizedBaseContracts": [
          170,
          16
        ],
        "name": "Counter",
        "nameLocation": "304:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "61bc221a",
            "id": 20,
            "mutability": "mutable",
            "name": "counter",
            "nameLocation": "362:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 170,
            "src": "347:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "347:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "947a36fb",
            "id": 22,
            "mutability": "immutable",
            "name": "interval",
            "nameLocation": "506:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 170,
            "src": "481:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "481:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3f3b3b27",
            "id": 24,
            "mutability": "mutable",
            "name": "lastTimeStamp",
            "nameLocation": "535:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 170,
            "src": "520:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "520:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3f774675",
            "id": 28,
            "mutability": "mutable",
            "name": "user_to_interval",
            "nameLocation": "589:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 170,
            "src": "554:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "562:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "554:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 26,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "573:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7bdb76b6",
            "id": 32,
            "mutability": "mutable",
            "name": "user_to_amount",
            "nameLocation": "646:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 170,
            "src": "611:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 31,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "619:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "611:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 30,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "630:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5e5f2e26",
            "id": 35,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "683:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 170,
            "src": "666:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "666:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 34,
              "nodeType": "ArrayTypeName",
              "src": "666:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "739:104:0",
              "statements": [
                {
                  "expression": {
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40,
                      "name": "interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "749:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41,
                      "name": "updateInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "760:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "749:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "749:25:0"
                },
                {
                  "expression": {
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "784:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 45,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "800:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "800:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "784:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "784:31:0"
                },
                {
                  "expression": {
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "825:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "835:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "825:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "825:11:0"
                }
              ]
            },
            "id": 54,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "updateInterval",
                  "nameLocation": "723:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "715:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "714:24:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:0:0"
            },
            "scope": 170,
            "src": "703:140:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "910:302:0",
              "statements": [
                {
                  "body": {
                    "id": 81,
                    "nodeType": "Block",
                    "src": "1068:116:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 72,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "1086:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 74,
                            "indexExpression": {
                              "id": 73,
                              "name": "allowedTokensIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "1100:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1086:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 75,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "1123:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1086:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 80,
                        "nodeType": "IfStatement",
                        "src": "1082:92:0",
                        "trueBody": {
                          "id": 79,
                          "nodeType": "Block",
                          "src": "1130:44:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 77,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1155:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 60,
                              "id": 78,
                              "nodeType": "Return",
                              "src": "1148:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 65,
                      "name": "allowedTokensIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "982:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 66,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1003:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1003:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "982:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82,
                  "initializationExpression": {
                    "assignments": [
                      62
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "allowedTokensIndex",
                        "nameLocation": "946:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "938:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "938:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 64,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "967:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "938:30:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1037:20:0",
                      "subExpression": {
                        "id": 69,
                        "name": "allowedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1037:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 71,
                    "nodeType": "ExpressionStatement",
                    "src": "1037:20:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "920:264:0"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1200:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 60,
                  "id": 84,
                  "nodeType": "Return",
                  "src": "1193:12:0"
                }
              ]
            },
            "functionSelector": "dd5b8467",
            "id": 86,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenIsAllowed",
            "nameLocation": "858:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "881:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "873:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "872:15:0"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "904:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "903:6:0"
            },
            "scope": 170,
            "src": "849:363:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1332:273:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 96,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "1391:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1401:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1391:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742063616e6e6f742062652030",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1404:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        },
                        "value": "amount cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        }
                      ],
                      "id": 95,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1383:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1383:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1383:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 104,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "1458:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 103,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "1443:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1443:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e2063757272656e746c792069736e277420616c6c6f776564",
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1466:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e076a5afaf59e476bf944ab215cb05dbf949917e41ad6daa384effb7af0dcce4",
                          "typeString": "literal_string \"Token currently isn't allowed\""
                        },
                        "value": "Token currently isn't allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e076a5afaf59e476bf944ab215cb05dbf949917e41ad6daa384effb7af0dcce4",
                          "typeString": "literal_string \"Token currently isn't allowed\""
                        }
                      ],
                      "id": 102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1435:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1435:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:63:0"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 109,
                        "name": "user_to_interval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1508:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "expression": {
                          "id": 110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1525:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1525:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1508:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 113,
                      "name": "_dca_interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "1539:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1508:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1508:44:0"
                },
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 116,
                        "name": "user_to_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1562:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 119,
                      "indexExpression": {
                        "expression": {
                          "id": 117,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1577:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1577:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1562:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 120,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "1591:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1562:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:36:0"
                }
              ]
            },
            "functionSelector": "6c92a800",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fundContract",
            "nameLocation": "1227:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1257:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1249:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_dca_interval",
                  "nameLocation": "1282:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1274:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1313:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1305:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:85:0"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1332:0:0"
            },
            "scope": 170,
            "src": "1218:387:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10
            ],
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1771:109:0",
              "statements": [
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 134,
                      "name": "upkeepNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "1781:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 135,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1797:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1797:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 137,
                              "name": "lastTimeStamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "1815:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1797:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 139,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1796:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 140,
                        "name": "interval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1832:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1796:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1781:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1781:59:0"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 144,
                      "name": "performData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "1850:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 145,
                      "name": "checkData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "1864:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "1850:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1850:23:0"
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "1620:11:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 128,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1696:8:0"
            },
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nameLocation": "1647:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1632:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1632:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1631:26:0"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "1727:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1722:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1722:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "1754:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1741:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1741:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1721:45:0"
            },
            "scope": 170,
            "src": "1611:269:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15
            ],
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1955:166:0",
              "statements": [
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 155,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1965:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 156,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1981:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1981:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1965:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "1965:31:0"
                },
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2006:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 161,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2016:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2026:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2016:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2006:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:21:0"
                },
                {
                  "expression": {
                    "id": 166,
                    "name": "performData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 151,
                    "src": "2037:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "2037:11:0"
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "1895:13:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 153,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1946:8:0"
            },
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "1924:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1909:26:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:28:0"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1955:0:0"
            },
            "scope": 170,
            "src": "1886:235:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 171,
        "src": "295:1828:0",
        "usedErrors": []
      }
    ],
    "src": "32:2092:0"
  },
  "bytecode": "60a060405234801561001057600080fd5b5060405161062b38038061062b83398101604081905261002f9161003f565b6080524260015560008055610058565b60006020828403121561005157600080fd5b5051919050565b6080516105b161007a6000396000818161018101526102cd01526105b16000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80636c92a800116100665780636c92a800146101285780636e04ff0d1461013b5780637bdb76b61461015c578063947a36fb1461017c578063dd5b8467146101a357600080fd5b80633f3b3b27146100a35780633f774675146100bf5780634585e33b146100df5780635e5f2e26146100f457806361bc221a1461011f575b600080fd5b6100ac60015481565b6040519081526020015b60405180910390f35b6100ac6100cd3660046103c4565b60026020526000908152604090205481565b6100f26100ed3660046103e6565b6101c6565b005b610107610102366004610458565b6101df565b6040516001600160a01b0390911681526020016100b6565b6100ac60005481565b6100f2610136366004610471565b610209565b61014e6101493660046103e6565b6102c7565b6040516100b69291906104a6565b6100ac61016a3660046103c4565b60036020526000908152604090205481565b6100ac7f000000000000000000000000000000000000000000000000000000000000000081565b6101b66101b13660046103c4565b61033e565b60405190151581526020016100b6565b4260019081556000546101d89161051b565b6000555050565b600481815481106101ef57600080fd5b6000918252602090912001546001600160a01b0316905081565b600083116102535760405162461bcd60e51b81526020600482015260126024820152710616d6f756e742063616e6e6f7420626520360741b60448201526064015b60405180910390fd5b61025c8161033e565b6102a85760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e2063757272656e746c792069736e277420616c6c6f776564000000604482015260640161024a565b5033600090815260026020908152604080832093909355600390522055565b600060607f0000000000000000000000000000000000000000000000000000000000000000600154426102fa9190610533565b11915083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250949792965091945050505050565b6000805b60045481101561039f57826001600160a01b0316600482815481106103695761036961054a565b6000918252602090912001546001600160a01b0316141561038d5750600192915050565b8061039781610560565b915050610342565b50600092915050565b80356001600160a01b03811681146103bf57600080fd5b919050565b6000602082840312156103d657600080fd5b6103df826103a8565b9392505050565b600080602083850312156103f957600080fd5b823567ffffffffffffffff8082111561041157600080fd5b818501915085601f83011261042557600080fd5b81358181111561043457600080fd5b86602082850101111561044657600080fd5b60209290920196919550909350505050565b60006020828403121561046a57600080fd5b5035919050565b60008060006060848603121561048657600080fd5b833592506020840135915061049d604085016103a8565b90509250925092565b821515815260006020604081840152835180604085015260005b818110156104dc578581018301518582016060015282016104c0565b818111156104ee576000606083870101525b50601f01601f191692909201606001949350505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561052e5761052e610505565b500190565b60008282101561054557610545610505565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561057457610574610505565b506001019056fea2646970667358221220c0e1ed48bc765738408fa970ee1cfb56e95aa81ad734352951037b404ef51cf564736f6c63430008090033",
  "bytecodeSha1": "a574805f4f71cb12f95b481edfc05a3353754c8e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "Counter",
  "coverageMap": {
    "branches": {
      "0": {
        "Counter.fundContract": {
          "11": [
            1391,
            1402,
            true
          ],
          "12": [
            1443,
            1464,
            true
          ]
        },
        "Counter.tokenIsAllowed": {
          "13": [
            1086,
            1128,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Counter.checkUpkeep": {
          "6": [
            1781,
            1840
          ],
          "7": [
            1850,
            1873
          ]
        },
        "Counter.fundContract": {
          "2": [
            1383,
            1425
          ],
          "3": [
            1435,
            1498
          ],
          "4": [
            1508,
            1552
          ],
          "5": [
            1562,
            1598
          ]
        },
        "Counter.performUpkeep": {
          "0": [
            1965,
            1996
          ],
          "1": [
            2006,
            2027
          ]
        },
        "Counter.tokenIsAllowed": {
          "8": [
            1148,
            1159
          ],
          "9": [
            1037,
            1057
          ],
          "10": [
            1193,
            1205
          ]
        }
      }
    }
  },
  "dependencies": [
    "KeeperCompatibleInterface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80636c92a800116100665780636c92a800146101285780636e04ff0d1461013b5780637bdb76b61461015c578063947a36fb1461017c578063dd5b8467146101a357600080fd5b80633f3b3b27146100a35780633f774675146100bf5780634585e33b146100df5780635e5f2e26146100f457806361bc221a1461011f575b600080fd5b6100ac60015481565b6040519081526020015b60405180910390f35b6100ac6100cd3660046103c4565b60026020526000908152604090205481565b6100f26100ed3660046103e6565b6101c6565b005b610107610102366004610458565b6101df565b6040516001600160a01b0390911681526020016100b6565b6100ac60005481565b6100f2610136366004610471565b610209565b61014e6101493660046103e6565b6102c7565b6040516100b69291906104a6565b6100ac61016a3660046103c4565b60036020526000908152604090205481565b6100ac7f000000000000000000000000000000000000000000000000000000000000000081565b6101b66101b13660046103c4565b61033e565b60405190151581526020016100b6565b4260019081556000546101d89161051b565b6000555050565b600481815481106101ef57600080fd5b6000918252602090912001546001600160a01b0316905081565b600083116102535760405162461bcd60e51b81526020600482015260126024820152710616d6f756e742063616e6e6f7420626520360741b60448201526064015b60405180910390fd5b61025c8161033e565b6102a85760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e2063757272656e746c792069736e277420616c6c6f776564000000604482015260640161024a565b5033600090815260026020908152604080832093909355600390522055565b600060607f0000000000000000000000000000000000000000000000000000000000000000600154426102fa9190610533565b11915083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250949792965091945050505050565b6000805b60045481101561039f57826001600160a01b0316600482815481106103695761036961054a565b6000918252602090912001546001600160a01b0316141561038d5750600192915050565b8061039781610560565b915050610342565b50600092915050565b80356001600160a01b03811681146103bf57600080fd5b919050565b6000602082840312156103d657600080fd5b6103df826103a8565b9392505050565b600080602083850312156103f957600080fd5b823567ffffffffffffffff8082111561041157600080fd5b818501915085601f83011261042557600080fd5b81358181111561043457600080fd5b86602082850101111561044657600080fd5b60209290920196919550909350505050565b60006020828403121561046a57600080fd5b5035919050565b60008060006060848603121561048657600080fd5b833592506020840135915061049d604085016103a8565b90509250925092565b821515815260006020604081840152835180604085015260005b818110156104dc578581018301518582016060015282016104c0565b818111156104ee576000606083870101525b50601f01601f191692909201606001949350505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561052e5761052e610505565b500190565b60008282101561054557610545610505565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561057457610574610505565b506001019056fea2646970667358221220c0e1ed48bc765738408fa970ee1cfb56e95aa81ad734352951037b404ef51cf564736f6c63430008090033",
  "deployedSourceMap": "295:1828:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;520:28;;;;;;;;;160:25:1;;;148:2;133:18;520:28:0;;;;;;;;554:51;;;;;;:::i;:::-;;;;;;;;;;;;;;1886:235;;;;;;:::i;:::-;;:::i;:::-;;666:30;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1510:32:1;;;1492:51;;1480:2;1465:18;666:30:0;1346:203:1;347:22:0;;;;;;1218:387;;;;;;:::i;:::-;;:::i;1611:269::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;611:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;481:33;;;;;849:363;;;;;;:::i;:::-;;:::i;:::-;;;2727:14:1;;2720:22;2702:41;;2690:2;2675:18;849:363:0;2562:187:1;1886:235:0;1981:15;1965:13;:31;;;2016:7;;:11;;;:::i;:::-;2006:7;:21;-1:-1:-1;;1886:235:0:o;666:30::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;666:30:0;;-1:-1:-1;666:30:0;:::o;1218:387::-;1401:1;1391:7;:11;1383:42;;;;-1:-1:-1;;;1383:42:0;;3221:2:1;1383:42:0;;;3203:21:1;3260:2;3240:18;;;3233:30;-1:-1:-1;;;3279:18:1;;;3272:48;3337:18;;1383:42:0;;;;;;;;;1443:21;1458:5;1443:14;:21::i;:::-;1435:63;;;;-1:-1:-1;;;1435:63:0;;3568:2:1;1435:63:0;;;3550:21:1;3607:2;3587:18;;;3580:30;3646:31;3626:18;;;3619:59;3695:18;;1435:63:0;3366:353:1;1435:63:0;-1:-1:-1;1525:10:0;1508:28;;;;:16;:28;;;;;;;;:44;;;;1562:14;:26;;;:36;1218:387::o;1611:269::-;1722:17;1741:24;1832:8;1815:13;;1797:15;:31;;;;:::i;:::-;1796:44;1781:59;;1864:9;;1850:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1611:269:0;;1850:23;;-1:-1:-1;1611:269:0;;-1:-1:-1;;;;;1611:269:0:o;849:363::-;904:4;;920:264;1003:13;:20;982:41;;920:264;;;1123:5;-1:-1:-1;;;;;1086:42:0;:13;1100:18;1086:33;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1086:33:0;:42;1082:92;;;-1:-1:-1;1155:4:0;;849:363;-1:-1:-1;;849:363:0:o;1082:92::-;1037:20;;;;:::i;:::-;;;;920:264;;;-1:-1:-1;1200:5:0;;849:363;-1:-1:-1;;849:363:0:o;196:173:1:-;264:20;;-1:-1:-1;;;;;313:31:1;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;:::-;515:39;374:186;-1:-1:-1;;;374:186:1:o;565:591::-;635:6;643;696:2;684:9;675:7;671:23;667:32;664:52;;;712:1;709;702:12;664:52;752:9;739:23;781:18;822:2;814:6;811:14;808:34;;;838:1;835;828:12;808:34;876:6;865:9;861:22;851:32;;921:7;914:4;910:2;906:13;902:27;892:55;;943:1;940;933:12;892:55;983:2;970:16;1009:2;1001:6;998:14;995:34;;;1025:1;1022;1015:12;995:34;1070:7;1065:2;1056:6;1052:2;1048:15;1044:24;1041:37;1038:57;;;1091:1;1088;1081:12;1038:57;1122:2;1114:11;;;;;1144:6;;-1:-1:-1;565:591:1;;-1:-1:-1;;;;565:591:1:o;1161:180::-;1220:6;1273:2;1261:9;1252:7;1248:23;1244:32;1241:52;;;1289:1;1286;1279:12;1241:52;-1:-1:-1;1312:23:1;;1161:180;-1:-1:-1;1161:180:1:o;1554:322::-;1631:6;1639;1647;1700:2;1688:9;1679:7;1675:23;1671:32;1668:52;;;1716:1;1713;1706:12;1668:52;1752:9;1739:23;1729:33;;1809:2;1798:9;1794:18;1781:32;1771:42;;1832:38;1866:2;1855:9;1851:18;1832:38;:::i;:::-;1822:48;;1554:322;;;;;:::o;1881:676::-;2064:6;2057:14;2050:22;2039:9;2032:41;2013:4;2092:2;2130;2125;2114:9;2110:18;2103:30;2162:6;2156:13;2205:6;2200:2;2189:9;2185:18;2178:34;2230:1;2240:140;2254:6;2251:1;2248:13;2240:140;;;2349:14;;;2345:23;;2339:30;2315:17;;;2334:2;2311:26;2304:66;2269:10;;2240:140;;;2398:6;2395:1;2392:13;2389:91;;;2468:1;2463:2;2454:6;2443:9;2439:22;2435:31;2428:42;2389:91;-1:-1:-1;2541:2:1;2520:15;-1:-1:-1;;2516:29:1;2501:45;;;;2548:2;2497:54;;1881:676;-1:-1:-1;;;;1881:676:1:o;2754:127::-;2815:10;2810:3;2806:20;2803:1;2796:31;2846:4;2843:1;2836:15;2870:4;2867:1;2860:15;2886:128;2926:3;2957:1;2953:6;2950:1;2947:13;2944:39;;;2963:18;;:::i;:::-;-1:-1:-1;2999:9:1;;2886:128::o;3724:125::-;3764:4;3792:1;3789;3786:8;3783:34;;;3797:18;;:::i;:::-;-1:-1:-1;3834:9:1;;3724:125::o;3854:127::-;3915:10;3910:3;3906:20;3903:1;3896:31;3946:4;3943:1;3936:15;3970:4;3967:1;3960:15;3986:135;4025:3;-1:-1:-1;;4046:17:1;;4043:43;;;4066:18;;:::i;:::-;-1:-1:-1;4113:1:1;4102:13;;3986:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    295,
    2123
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C92A800 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x6C92A800 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x7BDB76B6 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x3F774675 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0x11F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0x458 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB6 JUMP JUMPDEST PUSH2 0xAC PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0x471 JUMP JUMPDEST PUSH2 0x209 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP3 SWAP2 SWAP1 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0xAC PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAC PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB6 JUMP JUMPDEST TIMESTAMP PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x0 SLOAD PUSH2 0x1D8 SWAP2 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x0 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x616D6F756E742063616E6E6F74206265203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP2 PUSH2 0x33E JUMP JUMPDEST PUSH2 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E2063757272656E746C792069736E277420616C6C6F776564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x24A JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SWAP1 MSTORE KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH32 0x0 PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x533 JUMP JUMPDEST GT SWAP2 POP DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP5 SWAP8 SWAP3 SWAP7 POP SWAP2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x39F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x369 JUMPI PUSH2 0x369 PUSH2 0x54A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x38D JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x397 DUP2 PUSH2 0x560 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x342 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DF DUP3 PUSH2 0x3A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x49D PUSH1 0x40 DUP6 ADD PUSH2 0x3A8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4DC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0x4C0 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 PUSH1 0x60 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x60 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x52E JUMPI PUSH2 0x52E PUSH2 0x505 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x545 JUMPI PUSH2 0x545 PUSH2 0x505 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x574 JUMPI PUSH2 0x574 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xE1 0xED BASEFEE 0xBC PUSH23 0x5738408FA970EE1CFB56E95AA81AD734352951037B404E CREATE2 SHR CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        295,
        2123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6C92A800"
    },
    "38": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6C92A800"
    },
    "49": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x128"
    },
    "53": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6E04FF0D"
    },
    "60": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B"
    },
    "64": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7BDB76B6"
    },
    "71": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C"
    },
    "75": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x947A36FB"
    },
    "82": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C"
    },
    "86": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD5B8467"
    },
    "93": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A3"
    },
    "97": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3F3B3B27"
    },
    "109": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3F774675"
    },
    "120": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF"
    },
    "124": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4585E33B"
    },
    "131": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "135": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5E5F2E26"
    },
    "142": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF4"
    },
    "146": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x61BC221A"
    },
    "153": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "157": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        295,
        2123
      ],
      "op": "REVERT",
      "path": "0"
    },
    "163": {
      "offset": [
        520,
        548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "167": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "169": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "DUP2",
      "path": "0"
    },
    "171": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "172": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "173": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "175": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "176": {
      "op": "SWAP1"
    },
    "177": {
      "op": "DUP2"
    },
    "178": {
      "op": "MSTORE"
    },
    "179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "181": {
      "op": "ADD"
    },
    "182": {
      "offset": [
        520,
        548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "185": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "DUP1",
      "path": "0"
    },
    "187": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "188": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "SUB",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "190": {
      "fn": null,
      "offset": [
        520,
        548
      ],
      "op": "RETURN",
      "path": "0"
    },
    "191": {
      "offset": [
        554,
        605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "195": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "198": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "201": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C4"
    },
    "204": {
      "fn": null,
      "jump": "i",
      "offset": [
        554,
        605
      ],
      "op": "JUMP",
      "path": "0"
    },
    "205": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "208": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "210": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "213": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "215": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "216": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "218": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "220": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "221": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "222": {
      "fn": null,
      "offset": [
        554,
        605
      ],
      "op": "JUMP",
      "path": "0"
    },
    "223": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1886,
        2121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "224": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1886,
        2121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "227": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1886,
        2121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED"
    },
    "230": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1886,
        2121
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "231": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1886,
        2121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "233": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1886,
        2121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E6"
    },
    "236": {
      "fn": "Counter.performUpkeep",
      "jump": "i",
      "offset": [
        1886,
        2121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "237": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1886,
        2121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "238": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1886,
        2121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "241": {
      "fn": "Counter.performUpkeep",
      "jump": "i",
      "offset": [
        1886,
        2121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "242": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1886,
        2121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "243": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1886,
        2121
      ],
      "op": "STOP",
      "path": "0"
    },
    "244": {
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "245": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x107"
    },
    "248": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "251": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "252": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "254": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x458"
    },
    "257": {
      "fn": "Counter.performUpkeep",
      "jump": "i",
      "offset": [
        666,
        696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "258": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "259": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF"
    },
    "262": {
      "fn": "Counter.performUpkeep",
      "jump": "i",
      "offset": [
        666,
        696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "263": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "264": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "266": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "273": {
      "op": "SHL"
    },
    "274": {
      "op": "SUB"
    },
    "275": {
      "op": "SWAP1"
    },
    "276": {
      "op": "SWAP2"
    },
    "277": {
      "op": "AND"
    },
    "278": {
      "op": "DUP2"
    },
    "279": {
      "op": "MSTORE"
    },
    "280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "282": {
      "op": "ADD"
    },
    "283": {
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "286": {
      "op": "JUMP"
    },
    "287": {
      "offset": [
        347,
        369
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "288": {
      "fn": "Counter.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "291": {
      "fn": "Counter.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "293": {
      "fn": "Counter.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "294": {
      "fn": "Counter.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "DUP2",
      "path": "0"
    },
    "295": {
      "fn": "Counter.performUpkeep",
      "offset": [
        347,
        369
      ],
      "op": "JUMP",
      "path": "0"
    },
    "296": {
      "fn": "Counter.fundContract",
      "offset": [
        1218,
        1605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "297": {
      "fn": "Counter.fundContract",
      "offset": [
        1218,
        1605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "300": {
      "fn": "Counter.fundContract",
      "offset": [
        1218,
        1605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136"
    },
    "303": {
      "fn": "Counter.fundContract",
      "offset": [
        1218,
        1605
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "304": {
      "fn": "Counter.fundContract",
      "offset": [
        1218,
        1605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "306": {
      "fn": "Counter.fundContract",
      "offset": [
        1218,
        1605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x471"
    },
    "309": {
      "fn": "Counter.fundContract",
      "jump": "i",
      "offset": [
        1218,
        1605
      ],
      "op": "JUMP",
      "path": "0"
    },
    "310": {
      "fn": "Counter.fundContract",
      "offset": [
        1218,
        1605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "311": {
      "fn": "Counter.fundContract",
      "offset": [
        1218,
        1605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x209"
    },
    "314": {
      "fn": "Counter.fundContract",
      "jump": "i",
      "offset": [
        1218,
        1605
      ],
      "op": "JUMP",
      "path": "0"
    },
    "315": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "316": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14E"
    },
    "319": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x149"
    },
    "322": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "323": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "325": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E6"
    },
    "328": {
      "fn": "Counter.checkUpkeep",
      "jump": "i",
      "offset": [
        1611,
        1880
      ],
      "op": "JUMP",
      "path": "0"
    },
    "329": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "330": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C7"
    },
    "333": {
      "fn": "Counter.checkUpkeep",
      "jump": "i",
      "offset": [
        1611,
        1880
      ],
      "op": "JUMP",
      "path": "0"
    },
    "334": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "335": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "337": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "338": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "341": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "342": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "343": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "344": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A6"
    },
    "347": {
      "fn": "Counter.checkUpkeep",
      "jump": "i",
      "offset": [
        1611,
        1880
      ],
      "op": "JUMP",
      "path": "0"
    },
    "348": {
      "offset": [
        611,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "349": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "352": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A"
    },
    "355": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "356": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "358": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C4"
    },
    "361": {
      "fn": "Counter.checkUpkeep",
      "jump": "i",
      "offset": [
        611,
        660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "362": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "363": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "365": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "367": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "368": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "370": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "371": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "372": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "373": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "375": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "376": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "377": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "378": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "379": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        611,
        660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "380": {
      "offset": [
        481,
        514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "381": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        481,
        514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "384": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        481,
        514
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "417": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        481,
        514
      ],
      "op": "DUP2",
      "path": "0"
    },
    "418": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        481,
        514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "419": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "420": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B6"
    },
    "423": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B1"
    },
    "426": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "427": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "429": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C4"
    },
    "432": {
      "fn": "Counter.tokenIsAllowed",
      "jump": "i",
      "offset": [
        849,
        1212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "433": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "434": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E"
    },
    "437": {
      "fn": "Counter.tokenIsAllowed",
      "jump": "i",
      "offset": [
        849,
        1212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "438": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "439": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "441": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "442": {
      "op": "SWAP1"
    },
    "443": {
      "op": "ISZERO"
    },
    "444": {
      "op": "ISZERO"
    },
    "445": {
      "op": "DUP2"
    },
    "446": {
      "op": "MSTORE"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "449": {
      "op": "ADD"
    },
    "450": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "453": {
      "op": "JUMP"
    },
    "454": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1886,
        2121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "455": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1981,
        1996
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 0
    },
    "456": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1965,
        1978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "458": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1965,
        1996
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "459": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1965,
        1996
      ],
      "op": "DUP2",
      "path": "0"
    },
    "460": {
      "fn": "Counter.performUpkeep",
      "offset": [
        1965,
        1996
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "461": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2016,
        2023
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "463": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2016,
        2023
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "464": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2016,
        2027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D8"
    },
    "467": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2016,
        2027
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "468": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2016,
        2027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51B"
    },
    "471": {
      "fn": "Counter.performUpkeep",
      "jump": "i",
      "offset": [
        2016,
        2027
      ],
      "op": "JUMP",
      "path": "0"
    },
    "472": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2016,
        2027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "473": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2006,
        2013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "475": {
      "fn": "Counter.performUpkeep",
      "offset": [
        2006,
        2027
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "476": {
      "op": "POP"
    },
    "477": {
      "op": "POP"
    },
    "478": {
      "fn": "Counter.performUpkeep",
      "jump": "o",
      "offset": [
        1886,
        2121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "479": {
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "480": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "482": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "483": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "484": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "485": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "486": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "LT",
      "path": "0"
    },
    "487": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "490": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "491": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "493": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "494": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "REVERT",
      "path": "0"
    },
    "495": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "496": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "498": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "499": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "DUP3",
      "path": "0"
    },
    "500": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "501": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "503": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "504": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "505": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "506": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "ADD",
      "path": "0"
    },
    "507": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "514": {
      "op": "SHL"
    },
    "515": {
      "op": "SUB"
    },
    "516": {
      "offset": [
        666,
        696
      ],
      "op": "AND",
      "path": "0"
    },
    "517": {
      "fn": "Counter.performUpkeep",
      "offset": [
        666,
        696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "518": {
      "op": "POP"
    },
    "519": {
      "offset": [
        666,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "520": {
      "fn": "Counter.performUpkeep",
      "jump": "o",
      "offset": [
        666,
        696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "521": {
      "fn": "Counter.fundContract",
      "offset": [
        1218,
        1605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "522": {
      "fn": "Counter.fundContract",
      "offset": [
        1401,
        1402
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "524": {
      "fn": "Counter.fundContract",
      "offset": [
        1391,
        1398
      ],
      "op": "DUP4",
      "path": "0"
    },
    "525": {
      "branch": 11,
      "fn": "Counter.fundContract",
      "offset": [
        1391,
        1402
      ],
      "op": "GT",
      "path": "0"
    },
    "526": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x253"
    },
    "529": {
      "branch": 11,
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "530": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "532": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "533": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "537": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "539": {
      "op": "SHL"
    },
    "540": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "DUP2",
      "path": "0"
    },
    "541": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "544": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "546": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "DUP3",
      "path": "0"
    },
    "547": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "ADD",
      "path": "0"
    },
    "548": {
      "op": "MSTORE"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "553": {
      "op": "DUP3"
    },
    "554": {
      "op": "ADD"
    },
    "555": {
      "op": "MSTORE"
    },
    "556": {
      "op": "PUSH18",
      "value": "0x616D6F756E742063616E6E6F74206265203"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "577": {
      "op": "SHL"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "580": {
      "op": "DUP3"
    },
    "581": {
      "op": "ADD"
    },
    "582": {
      "op": "MSTORE"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "585": {
      "op": "ADD"
    },
    "586": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "587": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "589": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "590": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "DUP1",
      "path": "0"
    },
    "591": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "592": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "SUB",
      "path": "0"
    },
    "593": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "594": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "595": {
      "fn": "Counter.fundContract",
      "offset": [
        1383,
        1425
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "596": {
      "fn": "Counter.fundContract",
      "offset": [
        1443,
        1464
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x25C"
    },
    "599": {
      "fn": "Counter.fundContract",
      "offset": [
        1458,
        1463
      ],
      "op": "DUP2",
      "path": "0"
    },
    "600": {
      "fn": "Counter.fundContract",
      "offset": [
        1443,
        1457
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E"
    },
    "603": {
      "fn": "Counter.fundContract",
      "jump": "i",
      "offset": [
        1443,
        1464
      ],
      "op": "JUMP",
      "path": "0"
    },
    "604": {
      "branch": 12,
      "fn": "Counter.fundContract",
      "offset": [
        1443,
        1464
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "605": {
      "fn": "Counter.fundContract",
      "offset": [
        1435,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A8"
    },
    "608": {
      "branch": 12,
      "fn": "Counter.fundContract",
      "offset": [
        1435,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "609": {
      "fn": "Counter.fundContract",
      "offset": [
        1435,
        1498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "611": {
      "fn": "Counter.fundContract",
      "offset": [
        1435,
        1498
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "612": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "616": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "618": {
      "op": "SHL"
    },
    "619": {
      "fn": "Counter.fundContract",
      "offset": [
        1435,
        1498
      ],
      "op": "DUP2",
      "path": "0"
    },
    "620": {
      "fn": "Counter.fundContract",
      "offset": [
        1435,
        1498
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "623": {
      "fn": "Counter.fundContract",
      "offset": [
        1435,
        1498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "625": {
      "fn": "Counter.fundContract",
      "offset": [
        1435,
        1498
      ],
      "op": "DUP3",
      "path": "0"
    },
    "626": {
      "fn": "Counter.fundContract",
      "offset": [
        1435,
        1498
      ],
      "op": "ADD",
      "path": "0"
    },
    "627": {
      "op": "MSTORE"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "632": {
      "op": "DUP3"
    },
    "633": {
      "op": "ADD"
    },
    "634": {
      "op": "MSTORE"
    },
    "635": {
      "op": "PUSH32",
      "value": "0x546F6B656E2063757272656E746C792069736E277420616C6C6F776564000000"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "670": {
      "op": "DUP3"
    },
    "671": {
      "op": "ADD"
    },
    "672": {
      "op": "MSTORE"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "675": {
      "op": "ADD"
    },
    "676": {
      "fn": "Counter.fundContract",
      "offset": [
        1435,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A"
    },
    "679": {
      "op": "JUMP"
    },
    "680": {
      "fn": "Counter.fundContract",
      "offset": [
        1435,
        1498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "681": {
      "op": "POP"
    },
    "682": {
      "fn": "Counter.fundContract",
      "offset": [
        1525,
        1535
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 4
    },
    "683": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "685": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1536
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "686": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1536
      ],
      "op": "DUP2",
      "path": "0"
    },
    "687": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1536
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "688": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "690": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "692": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1536
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "693": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1536
      ],
      "op": "DUP2",
      "path": "0"
    },
    "694": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1536
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "695": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "697": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1536
      ],
      "op": "DUP1",
      "path": "0"
    },
    "698": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1536
      ],
      "op": "DUP4",
      "path": "0"
    },
    "699": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1536
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "700": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1552
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "701": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1552
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "702": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1552
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "703": {
      "fn": "Counter.fundContract",
      "offset": [
        1508,
        1552
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "704": {
      "fn": "Counter.fundContract",
      "offset": [
        1562,
        1576
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x3"
    },
    "706": {
      "fn": "Counter.fundContract",
      "offset": [
        1562,
        1588
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "707": {
      "fn": "Counter.fundContract",
      "offset": [
        1562,
        1588
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "708": {
      "fn": "Counter.fundContract",
      "offset": [
        1562,
        1588
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "709": {
      "fn": "Counter.fundContract",
      "offset": [
        1562,
        1598
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "710": {
      "fn": "Counter.fundContract",
      "jump": "o",
      "offset": [
        1218,
        1605
      ],
      "op": "JUMP",
      "path": "0"
    },
    "711": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "712": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1722,
        1739
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "714": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1741,
        1765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "716": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1832,
        1840
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "749": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1815,
        1828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "751": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1815,
        1828
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "752": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1797,
        1812
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "753": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1797,
        1828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FA"
    },
    "756": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1797,
        1828
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "757": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1797,
        1828
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "758": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1797,
        1828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x533"
    },
    "761": {
      "fn": "Counter.checkUpkeep",
      "jump": "i",
      "offset": [
        1797,
        1828
      ],
      "op": "JUMP",
      "path": "0"
    },
    "762": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1797,
        1828
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "763": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1796,
        1840
      ],
      "op": "GT",
      "path": "0"
    },
    "764": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1781,
        1840
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "765": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1781,
        1840
      ],
      "op": "POP",
      "path": "0"
    },
    "766": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1864,
        1873
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 7
    },
    "767": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1864,
        1873
      ],
      "op": "DUP4",
      "path": "0"
    },
    "768": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "769": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "770": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "772": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "ADD",
      "path": "0"
    },
    "773": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "775": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "776": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "777": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "DIV",
      "path": "0"
    },
    "778": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "MUL",
      "path": "0"
    },
    "779": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "781": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "ADD",
      "path": "0"
    },
    "782": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "784": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "785": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "786": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "DUP2",
      "path": "0"
    },
    "787": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "ADD",
      "path": "0"
    },
    "788": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "790": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "791": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "792": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "793": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "794": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "795": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "796": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "DUP2",
      "path": "0"
    },
    "797": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "DUP2",
      "path": "0"
    },
    "798": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "799": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "801": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "ADD",
      "path": "0"
    },
    "802": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "DUP4",
      "path": "0"
    },
    "803": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "DUP4",
      "path": "0"
    },
    "804": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "805": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "DUP3",
      "path": "0"
    },
    "806": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "DUP5",
      "path": "0"
    },
    "807": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "808": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "810": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "811": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "ADD",
      "path": "0"
    },
    "812": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "813": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "814": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "815": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "816": {
      "op": "POP"
    },
    "817": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "818": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "819": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "820": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1850,
        1873
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "821": {
      "op": "POP"
    },
    "822": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "823": {
      "fn": "Counter.checkUpkeep",
      "offset": [
        1611,
        1880
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "824": {
      "op": "POP"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "op": "POP"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "fn": "Counter.checkUpkeep",
      "jump": "o",
      "offset": [
        1611,
        1880
      ],
      "op": "JUMP",
      "path": "0"
    },
    "830": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "831": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        904,
        908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "833": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        904,
        908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "834": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        920,
        1184
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "835": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1003,
        1016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "837": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1003,
        1023
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "838": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        982,
        1023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "839": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        982,
        1023
      ],
      "op": "LT",
      "path": "0"
    },
    "840": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        920,
        1184
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "841": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        920,
        1184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39F"
    },
    "844": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        920,
        1184
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "845": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1123,
        1128
      ],
      "op": "DUP3",
      "path": "0"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "852": {
      "op": "SHL"
    },
    "853": {
      "op": "SUB"
    },
    "854": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1128
      ],
      "op": "AND",
      "path": "0"
    },
    "855": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1099
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "857": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1100,
        1118
      ],
      "op": "DUP3",
      "path": "0"
    },
    "858": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "DUP2",
      "path": "0"
    },
    "859": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "860": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "DUP2",
      "path": "0"
    },
    "861": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "LT",
      "path": "0"
    },
    "862": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "865": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "866": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "869": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54A"
    },
    "872": {
      "fn": "Counter.tokenIsAllowed",
      "jump": "i",
      "offset": [
        1086,
        1119
      ],
      "op": "JUMP",
      "path": "0"
    },
    "873": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "874": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "876": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "877": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "DUP3",
      "path": "0"
    },
    "878": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "879": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "881": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "882": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "883": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "884": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "ADD",
      "path": "0"
    },
    "885": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "892": {
      "op": "SHL"
    },
    "893": {
      "op": "SUB"
    },
    "894": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1119
      ],
      "op": "AND",
      "path": "0"
    },
    "895": {
      "branch": 13,
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1086,
        1128
      ],
      "op": "EQ",
      "path": "0"
    },
    "896": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1082,
        1174
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "897": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1082,
        1174
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38D"
    },
    "900": {
      "branch": 13,
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1082,
        1174
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "901": {
      "op": "POP"
    },
    "902": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1155,
        1159
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x1"
    },
    "904": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1155,
        1159
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "905": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "906": {
      "op": "POP"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "fn": "Counter.tokenIsAllowed",
      "jump": "o",
      "offset": [
        849,
        1212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "909": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1082,
        1174
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "910": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1037,
        1057
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 9
    },
    "911": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1037,
        1057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x397"
    },
    "914": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1037,
        1057
      ],
      "op": "DUP2",
      "path": "0"
    },
    "915": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1037,
        1057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x560"
    },
    "918": {
      "fn": "Counter.tokenIsAllowed",
      "jump": "i",
      "offset": [
        1037,
        1057
      ],
      "op": "JUMP",
      "path": "0"
    },
    "919": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1037,
        1057
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "920": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1037,
        1057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "921": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1037,
        1057
      ],
      "op": "POP",
      "path": "0"
    },
    "922": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1037,
        1057
      ],
      "op": "POP",
      "path": "0"
    },
    "923": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        920,
        1184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x342"
    },
    "926": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        920,
        1184
      ],
      "op": "JUMP",
      "path": "0"
    },
    "927": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        920,
        1184
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "928": {
      "op": "POP"
    },
    "929": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1200,
        1205
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "931": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        1200,
        1205
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "932": {
      "fn": "Counter.tokenIsAllowed",
      "offset": [
        849,
        1212
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "933": {
      "op": "POP"
    },
    "934": {
      "op": "POP"
    },
    "935": {
      "fn": "Counter.tokenIsAllowed",
      "jump": "o",
      "offset": [
        849,
        1212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "936": {
      "op": "JUMPDEST"
    },
    "937": {
      "op": "DUP1"
    },
    "938": {
      "op": "CALLDATALOAD"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "945": {
      "op": "SHL"
    },
    "946": {
      "op": "SUB"
    },
    "947": {
      "op": "DUP2"
    },
    "948": {
      "op": "AND"
    },
    "949": {
      "op": "DUP2"
    },
    "950": {
      "op": "EQ"
    },
    "951": {
      "op": "PUSH2",
      "value": "0x3BF"
    },
    "954": {
      "op": "JUMPI"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "957": {
      "op": "DUP1"
    },
    "958": {
      "op": "REVERT"
    },
    "959": {
      "op": "JUMPDEST"
    },
    "960": {
      "op": "SWAP2"
    },
    "961": {
      "op": "SWAP1"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "jump": "o",
      "op": "JUMP"
    },
    "964": {
      "op": "JUMPDEST"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "969": {
      "op": "DUP3"
    },
    "970": {
      "op": "DUP5"
    },
    "971": {
      "op": "SUB"
    },
    "972": {
      "op": "SLT"
    },
    "973": {
      "op": "ISZERO"
    },
    "974": {
      "op": "PUSH2",
      "value": "0x3D6"
    },
    "977": {
      "op": "JUMPI"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "980": {
      "op": "DUP1"
    },
    "981": {
      "op": "REVERT"
    },
    "982": {
      "op": "JUMPDEST"
    },
    "983": {
      "op": "PUSH2",
      "value": "0x3DF"
    },
    "986": {
      "op": "DUP3"
    },
    "987": {
      "op": "PUSH2",
      "value": "0x3A8"
    },
    "990": {
      "jump": "i",
      "op": "JUMP"
    },
    "991": {
      "op": "JUMPDEST"
    },
    "992": {
      "op": "SWAP4"
    },
    "993": {
      "op": "SWAP3"
    },
    "994": {
      "op": "POP"
    },
    "995": {
      "op": "POP"
    },
    "996": {
      "op": "POP"
    },
    "997": {
      "jump": "o",
      "op": "JUMP"
    },
    "998": {
      "op": "JUMPDEST"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1001": {
      "op": "DUP1"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1004": {
      "op": "DUP4"
    },
    "1005": {
      "op": "DUP6"
    },
    "1006": {
      "op": "SUB"
    },
    "1007": {
      "op": "SLT"
    },
    "1008": {
      "op": "ISZERO"
    },
    "1009": {
      "op": "PUSH2",
      "value": "0x3F9"
    },
    "1012": {
      "op": "JUMPI"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1015": {
      "op": "DUP1"
    },
    "1016": {
      "op": "REVERT"
    },
    "1017": {
      "op": "JUMPDEST"
    },
    "1018": {
      "op": "DUP3"
    },
    "1019": {
      "op": "CALLDATALOAD"
    },
    "1020": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1029": {
      "op": "DUP1"
    },
    "1030": {
      "op": "DUP3"
    },
    "1031": {
      "op": "GT"
    },
    "1032": {
      "op": "ISZERO"
    },
    "1033": {
      "op": "PUSH2",
      "value": "0x411"
    },
    "1036": {
      "op": "JUMPI"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1039": {
      "op": "DUP1"
    },
    "1040": {
      "op": "REVERT"
    },
    "1041": {
      "op": "JUMPDEST"
    },
    "1042": {
      "op": "DUP2"
    },
    "1043": {
      "op": "DUP6"
    },
    "1044": {
      "op": "ADD"
    },
    "1045": {
      "op": "SWAP2"
    },
    "1046": {
      "op": "POP"
    },
    "1047": {
      "op": "DUP6"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1050": {
      "op": "DUP4"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "op": "SLT"
    },
    "1053": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "1056": {
      "op": "JUMPI"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1059": {
      "op": "DUP1"
    },
    "1060": {
      "op": "REVERT"
    },
    "1061": {
      "op": "JUMPDEST"
    },
    "1062": {
      "op": "DUP2"
    },
    "1063": {
      "op": "CALLDATALOAD"
    },
    "1064": {
      "op": "DUP2"
    },
    "1065": {
      "op": "DUP2"
    },
    "1066": {
      "op": "GT"
    },
    "1067": {
      "op": "ISZERO"
    },
    "1068": {
      "op": "PUSH2",
      "value": "0x434"
    },
    "1071": {
      "op": "JUMPI"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1074": {
      "op": "DUP1"
    },
    "1075": {
      "op": "REVERT"
    },
    "1076": {
      "op": "JUMPDEST"
    },
    "1077": {
      "op": "DUP7"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1080": {
      "op": "DUP3"
    },
    "1081": {
      "op": "DUP6"
    },
    "1082": {
      "op": "ADD"
    },
    "1083": {
      "op": "ADD"
    },
    "1084": {
      "op": "GT"
    },
    "1085": {
      "op": "ISZERO"
    },
    "1086": {
      "op": "PUSH2",
      "value": "0x446"
    },
    "1089": {
      "op": "JUMPI"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1092": {
      "op": "DUP1"
    },
    "1093": {
      "op": "REVERT"
    },
    "1094": {
      "op": "JUMPDEST"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1097": {
      "op": "SWAP3"
    },
    "1098": {
      "op": "SWAP1"
    },
    "1099": {
      "op": "SWAP3"
    },
    "1100": {
      "op": "ADD"
    },
    "1101": {
      "op": "SWAP7"
    },
    "1102": {
      "op": "SWAP2"
    },
    "1103": {
      "op": "SWAP6"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "op": "SWAP1"
    },
    "1106": {
      "op": "SWAP4"
    },
    "1107": {
      "op": "POP"
    },
    "1108": {
      "op": "POP"
    },
    "1109": {
      "op": "POP"
    },
    "1110": {
      "op": "POP"
    },
    "1111": {
      "jump": "o",
      "op": "JUMP"
    },
    "1112": {
      "op": "JUMPDEST"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1117": {
      "op": "DUP3"
    },
    "1118": {
      "op": "DUP5"
    },
    "1119": {
      "op": "SUB"
    },
    "1120": {
      "op": "SLT"
    },
    "1121": {
      "op": "ISZERO"
    },
    "1122": {
      "op": "PUSH2",
      "value": "0x46A"
    },
    "1125": {
      "op": "JUMPI"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1128": {
      "op": "DUP1"
    },
    "1129": {
      "op": "REVERT"
    },
    "1130": {
      "op": "JUMPDEST"
    },
    "1131": {
      "op": "POP"
    },
    "1132": {
      "op": "CALLDATALOAD"
    },
    "1133": {
      "op": "SWAP2"
    },
    "1134": {
      "op": "SWAP1"
    },
    "1135": {
      "op": "POP"
    },
    "1136": {
      "jump": "o",
      "op": "JUMP"
    },
    "1137": {
      "op": "JUMPDEST"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1140": {
      "op": "DUP1"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1145": {
      "op": "DUP5"
    },
    "1146": {
      "op": "DUP7"
    },
    "1147": {
      "op": "SUB"
    },
    "1148": {
      "op": "SLT"
    },
    "1149": {
      "op": "ISZERO"
    },
    "1150": {
      "op": "PUSH2",
      "value": "0x486"
    },
    "1153": {
      "op": "JUMPI"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1156": {
      "op": "DUP1"
    },
    "1157": {
      "op": "REVERT"
    },
    "1158": {
      "op": "JUMPDEST"
    },
    "1159": {
      "op": "DUP4"
    },
    "1160": {
      "op": "CALLDATALOAD"
    },
    "1161": {
      "op": "SWAP3"
    },
    "1162": {
      "op": "POP"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1165": {
      "op": "DUP5"
    },
    "1166": {
      "op": "ADD"
    },
    "1167": {
      "op": "CALLDATALOAD"
    },
    "1168": {
      "op": "SWAP2"
    },
    "1169": {
      "op": "POP"
    },
    "1170": {
      "op": "PUSH2",
      "value": "0x49D"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1175": {
      "op": "DUP6"
    },
    "1176": {
      "op": "ADD"
    },
    "1177": {
      "op": "PUSH2",
      "value": "0x3A8"
    },
    "1180": {
      "jump": "i",
      "op": "JUMP"
    },
    "1181": {
      "op": "JUMPDEST"
    },
    "1182": {
      "op": "SWAP1"
    },
    "1183": {
      "op": "POP"
    },
    "1184": {
      "op": "SWAP3"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "op": "SWAP3"
    },
    "1187": {
      "op": "POP"
    },
    "1188": {
      "op": "SWAP3"
    },
    "1189": {
      "jump": "o",
      "op": "JUMP"
    },
    "1190": {
      "op": "JUMPDEST"
    },
    "1191": {
      "op": "DUP3"
    },
    "1192": {
      "op": "ISZERO"
    },
    "1193": {
      "op": "ISZERO"
    },
    "1194": {
      "op": "DUP2"
    },
    "1195": {
      "op": "MSTORE"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1202": {
      "op": "DUP2"
    },
    "1203": {
      "op": "DUP5"
    },
    "1204": {
      "op": "ADD"
    },
    "1205": {
      "op": "MSTORE"
    },
    "1206": {
      "op": "DUP4"
    },
    "1207": {
      "op": "MLOAD"
    },
    "1208": {
      "op": "DUP1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1211": {
      "op": "DUP6"
    },
    "1212": {
      "op": "ADD"
    },
    "1213": {
      "op": "MSTORE"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1216": {
      "op": "JUMPDEST"
    },
    "1217": {
      "op": "DUP2"
    },
    "1218": {
      "op": "DUP2"
    },
    "1219": {
      "op": "LT"
    },
    "1220": {
      "op": "ISZERO"
    },
    "1221": {
      "op": "PUSH2",
      "value": "0x4DC"
    },
    "1224": {
      "op": "JUMPI"
    },
    "1225": {
      "op": "DUP6"
    },
    "1226": {
      "op": "DUP2"
    },
    "1227": {
      "op": "ADD"
    },
    "1228": {
      "op": "DUP4"
    },
    "1229": {
      "op": "ADD"
    },
    "1230": {
      "op": "MLOAD"
    },
    "1231": {
      "op": "DUP6"
    },
    "1232": {
      "op": "DUP3"
    },
    "1233": {
      "op": "ADD"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1236": {
      "op": "ADD"
    },
    "1237": {
      "op": "MSTORE"
    },
    "1238": {
      "op": "DUP3"
    },
    "1239": {
      "op": "ADD"
    },
    "1240": {
      "op": "PUSH2",
      "value": "0x4C0"
    },
    "1243": {
      "op": "JUMP"
    },
    "1244": {
      "op": "JUMPDEST"
    },
    "1245": {
      "op": "DUP2"
    },
    "1246": {
      "op": "DUP2"
    },
    "1247": {
      "op": "GT"
    },
    "1248": {
      "op": "ISZERO"
    },
    "1249": {
      "op": "PUSH2",
      "value": "0x4EE"
    },
    "1252": {
      "op": "JUMPI"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1257": {
      "op": "DUP4"
    },
    "1258": {
      "op": "DUP8"
    },
    "1259": {
      "op": "ADD"
    },
    "1260": {
      "op": "ADD"
    },
    "1261": {
      "op": "MSTORE"
    },
    "1262": {
      "op": "JUMPDEST"
    },
    "1263": {
      "op": "POP"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1266": {
      "op": "ADD"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1269": {
      "op": "NOT"
    },
    "1270": {
      "op": "AND"
    },
    "1271": {
      "op": "SWAP3"
    },
    "1272": {
      "op": "SWAP1"
    },
    "1273": {
      "op": "SWAP3"
    },
    "1274": {
      "op": "ADD"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1277": {
      "op": "ADD"
    },
    "1278": {
      "op": "SWAP5"
    },
    "1279": {
      "op": "SWAP4"
    },
    "1280": {
      "op": "POP"
    },
    "1281": {
      "op": "POP"
    },
    "1282": {
      "op": "POP"
    },
    "1283": {
      "op": "POP"
    },
    "1284": {
      "jump": "o",
      "op": "JUMP"
    },
    "1285": {
      "op": "JUMPDEST"
    },
    "1286": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1293": {
      "op": "SHL"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1296": {
      "op": "MSTORE"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1301": {
      "op": "MSTORE"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1306": {
      "op": "REVERT"
    },
    "1307": {
      "op": "JUMPDEST"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1310": {
      "op": "DUP3"
    },
    "1311": {
      "op": "NOT"
    },
    "1312": {
      "op": "DUP3"
    },
    "1313": {
      "op": "GT"
    },
    "1314": {
      "op": "ISZERO"
    },
    "1315": {
      "op": "PUSH2",
      "value": "0x52E"
    },
    "1318": {
      "op": "JUMPI"
    },
    "1319": {
      "op": "PUSH2",
      "value": "0x52E"
    },
    "1322": {
      "op": "PUSH2",
      "value": "0x505"
    },
    "1325": {
      "jump": "i",
      "op": "JUMP"
    },
    "1326": {
      "op": "JUMPDEST"
    },
    "1327": {
      "op": "POP"
    },
    "1328": {
      "op": "ADD"
    },
    "1329": {
      "op": "SWAP1"
    },
    "1330": {
      "jump": "o",
      "op": "JUMP"
    },
    "1331": {
      "op": "JUMPDEST"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1334": {
      "op": "DUP3"
    },
    "1335": {
      "op": "DUP3"
    },
    "1336": {
      "op": "LT"
    },
    "1337": {
      "op": "ISZERO"
    },
    "1338": {
      "op": "PUSH2",
      "value": "0x545"
    },
    "1341": {
      "op": "JUMPI"
    },
    "1342": {
      "op": "PUSH2",
      "value": "0x545"
    },
    "1345": {
      "op": "PUSH2",
      "value": "0x505"
    },
    "1348": {
      "jump": "i",
      "op": "JUMP"
    },
    "1349": {
      "op": "JUMPDEST"
    },
    "1350": {
      "op": "POP"
    },
    "1351": {
      "op": "SUB"
    },
    "1352": {
      "op": "SWAP1"
    },
    "1353": {
      "jump": "o",
      "op": "JUMP"
    },
    "1354": {
      "op": "JUMPDEST"
    },
    "1355": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1362": {
      "op": "SHL"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1365": {
      "op": "MSTORE"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1370": {
      "op": "MSTORE"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1375": {
      "op": "REVERT"
    },
    "1376": {
      "op": "JUMPDEST"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1381": {
      "op": "NOT"
    },
    "1382": {
      "op": "DUP3"
    },
    "1383": {
      "op": "EQ"
    },
    "1384": {
      "op": "ISZERO"
    },
    "1385": {
      "op": "PUSH2",
      "value": "0x574"
    },
    "1388": {
      "op": "JUMPI"
    },
    "1389": {
      "op": "PUSH2",
      "value": "0x574"
    },
    "1392": {
      "op": "PUSH2",
      "value": "0x505"
    },
    "1395": {
      "jump": "i",
      "op": "JUMP"
    },
    "1396": {
      "op": "JUMPDEST"
    },
    "1397": {
      "op": "POP"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1400": {
      "op": "ADD"
    },
    "1401": {
      "op": "SWAP1"
    },
    "1402": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "12e51f9215c1fde10f3ace182f95ccf71f563450",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface KeeperCompatibleInterface {\n    function checkUpkeep(bytes calldata checkData)\n        external\n        returns (bool upkeepNeeded, bytes memory performData);\n\n    function performUpkeep(bytes calldata performData) external;\n}\n\ncontract Counter is KeeperCompatibleInterface {\n    uint256 public counter; // Public counter variable\n\n    // Use an interval in seconds and a timestamp to slow execution of Upkeep\n    uint256 public immutable interval;\n    uint256 public lastTimeStamp;\n    mapping(address => uint256) public user_to_interval;\n    mapping(address => uint256) public user_to_amount;\n    address[] public allowedTokens;\n\n    constructor(uint256 updateInterval) {\n        interval = updateInterval;\n        lastTimeStamp = block.timestamp;\n        counter = 0;\n    }\n\n    function tokenIsAllowed(address token) public returns (bool) {\n        for (\n            uint256 allowedTokensIndex = 0;\n            allowedTokensIndex < allowedTokens.length;\n            allowedTokensIndex++\n        ) {\n            if (allowedTokens[allowedTokensIndex] == token) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function fundContract(\n        uint256 _amount,\n        uint256 _dca_interval,\n        address token\n    ) public {\n        // Require amount greater than 0\n        require(_amount > 0, \"amount cannot be 0\");\n        require(tokenIsAllowed(token), \"Token currently isn't allowed\");\n        user_to_interval[msg.sender] = _dca_interval;\n        user_to_amount[msg.sender] = _amount;\n    }\n\n    function checkUpkeep(bytes calldata checkData)\n        external\n        view\n        override\n        returns (bool upkeepNeeded, bytes memory performData)\n    {\n        upkeepNeeded = (block.timestamp - lastTimeStamp) > interval;\n        performData = checkData;\n    }\n\n    function performUpkeep(bytes calldata performData) external override {\n        lastTimeStamp = block.timestamp;\n        counter = counter + 1;\n        performData;\n        // do stuff with user -> interval and user -> amount here\n    }\n}\n",
  "sourceMap": "295:1828:0:-:0;;;703:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;749:25;;800:15;784:13;:31;835:1;825:11;;295:1828;;14:184:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:1;;14:184;-1:-1:-1;14:184:1:o;:::-;295:1828:0;;;;;;;;;;",
  "sourcePath": "contracts/Counter.sol",
  "type": "contract"
}